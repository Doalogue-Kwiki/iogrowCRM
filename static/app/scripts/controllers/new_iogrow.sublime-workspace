{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"case",
				"case"
			],
			[
				"opp",
				"opportunity"
			],
			[
				"shar",
				"sharing_with"
			],
			[
				"lunc",
				"lunchWindow	(leadcontrollers.js)"
			],
			[
				"bro",
				"browser	(leadcontrollers.js)"
			],
			[
				"cons",
				"console	(taskcontrollers.js)"
			],
			[
				"contact",
				"contact"
			],
			[
				"webs",
				"website"
			],
			[
				"logo",
				"logo_img_url"
			],
			[
				"prof",
				"profile_img"
			],
			[
				"image",
				"imageSrc"
			],
			[
				"add",
				"addresses"
			],
			[
				"soc",
				"sociallinks"
			],
			[
				"web",
				"website"
			],
			[
				"inf",
				"infonode"
			],
			[
				"exist",
				"exists"
			],
			[
				"socia",
				"social"
			],
			[
				"account",
				"account"
			],
			[
				"we",
				"websites"
			],
			[
				"socila",
				"sociallink"
			],
			[
				"socil",
				"sociallink"
			],
			[
				"com",
				"company"
			],
			[
				"loca",
				"locality=address"
			],
			[
				"loc",
				"locality=address"
			],
			[
				"for",
				"formatted"
			],
			[
				"con",
				"contact"
			],
			[
				"email",
				"emails"
			],
			[
				"consol",
				"console"
			],
			[
				"oppo",
				"opportunities"
			],
			[
				"isE",
				"isEmptyObject	(opportunitycontroller.js)"
			],
			[
				"exe",
				"executed	(opportunitycontroller.js)"
			],
			[
				"res",
				"resp"
			],
			[
				"pre",
				"preview	(leadcontrollers.js)"
			],
			[
				"embed",
				"embedLink"
			],
			[
				"emb",
				"embedLink	(opportunitycontroller.js)"
			],
			[
				"item",
				"item"
			],
			[
				"tr",
				"true"
			],
			[
				"bla",
				"blankStatdocuments	(accountservices.js)"
			],
			[
				"docum",
				"documents"
			],
			[
				"inde",
				"indexOf"
			],
			[
				"doc",
				"document"
			],
			[
				"selecte",
				"selectedTab==5"
			],
			[
				"sele",
				"selectedOpps	(leadcontrollers.js)"
			],
			[
				"seletedO",
				"selectedOpps	(leadcontrollers.js)"
			],
			[
				"selete",
				"selectedTab==2"
			],
			[
				"index",
				"index"
			],
			[
				"selectedOpp",
				"selectedOpps"
			],
			[
				"edite",
				"editbeforedelete"
			],
			[
				"seleted",
				"selectedTab==2"
			],
			[
				"curre",
				"current_stage"
			],
			[
				"even",
				"eventt"
			],
			[
				"adre",
				"addresses"
			],
			[
				"phone",
				"phones"
			],
			[
				"info",
				"infonodes"
			],
			[
				"created",
				"created_at	(opportunitycontroller.js)"
			],
			[
				"st",
				"style"
			],
			[
				"lo",
				"log($scope"
			],
			[
				"stage",
				"stageTo"
			],
			[
				"sle",
				"selectedCards"
			],
			[
				"acc",
				"access"
			],
			[
				"ent",
				"entityKey"
			],
			[
				"accoun",
				"account"
			],
			[
				"cas",
				"casee"
			],
			[
				"curso",
				"cursor:pointer"
			],
			[
				"lead",
				"leadstatuses"
			],
			[
				"stat",
				"status"
			],
			[
				"Lea",
				"Leads	(lead_list.html)"
			],
			[
				"app",
				"apply"
			],
			[
				"alwa",
				"alwaysVisible	(jquery.slimscroll.js)"
			],
			[
				"over",
				"overflow	(test.css)"
			],
			[
				"he",
				"height"
			],
			[
				"page",
				"pageToken"
			],
			[
				"toStri",
				"toString()	String"
			],
			[
				"next",
				"nextPageToken"
			],
			[
				"contcat",
				"contacts"
			],
			[
				"trigg",
				"triggered"
			],
			[
				"cus",
				"customfield	(leadcontrollers.js)"
			],
			[
				"getRe",
				"getRequestParams"
			],
			[
				"getR",
				"getRequestParams"
			],
			[
				"apply",
				"apply"
			],
			[
				"padd",
				"padding"
			],
			[
				"trans",
				"transparent	(untitled.css)"
			],
			[
				"appl",
				"apply	(leadcontrollers.js)"
			],
			[
				"accounts",
				"accounts"
			],
			[
				"selected",
				"selectedTab"
			],
			[
				"file",
				"field"
			],
			[
				"inlien",
				"inlinepatch"
			],
			[
				"custom",
				"customfield"
			],
			[
				"fiel",
				"fields"
			],
			[
				"option",
				"option"
			],
			[
				"op",
				"option"
			],
			[
				"sche",
				"schemas	(settingservices.js)"
			],
			[
				"infonode",
				"infonode_key"
			],
			[
				"va",
				"value"
			],
			[
				"in",
				"infonodes"
			],
			[
				"prope",
				"property_type"
			],
			[
				"infono",
				"infonode"
			],
			[
				"related",
				"related_object"
			],
			[
				"optoin",
				"options"
			],
			[
				"options",
				"options"
			],
			[
				"custo",
				"customfields"
			],
			[
				"relate",
				"related_object"
			],
			[
				"enti",
				"entityKey	(accountcontrollers.js)"
			],
			[
				"dele",
				"delete	(custom_fields_edit.html)"
			],
			[
				"sp",
				"span"
			],
			[
				"rela",
				"related_object"
			],
			[
				"cle",
				"clear	(opportunity_new.html)"
			],
			[
				"cusF",
				"cusfield"
			],
			[
				"inse",
				"insert	(accountcontrollers.js)"
			],
			[
				"para",
				"params	(settingservices.js)"
			],
			[
				"val",
				"value	Attr"
			],
			[
				"opt",
				"option"
			],
			[
				"check",
				"checkbox"
			],
			[
				"pr",
				"props"
			],
			[
				"text",
				"textarea	(opportunity_new.html)"
			],
			[
				"nu",
				"null	(base.html)"
			],
			[
				"cur",
				"cursor	(lead_show.html)"
			],
			[
				"length",
				"length==1	(account_list.html)"
			],
			[
				"impo",
				"import	(handlers.py)"
			],
			[
				"che",
				"checkbox	(base.html)"
			],
			[
				"optio",
				"options	(authservices.js)"
			],
			[
				"ex",
				"exp"
			],
			[
				"repons",
				"response	(opportunitycontroller.js)"
			],
			[
				"exp",
				"express"
			],
			[
				"cong",
				"config"
			],
			[
				"readFile",
				"readFileSync	(cus_server.js)"
			],
			[
				"ser",
				"server"
			],
			[
				"console",
				"console.log('$0');"
			]
		]
	},
	"buffers":
	[
		{
			"file": "taskcontrollers.js",
			"settings":
			{
				"buffer_size": 53095,
				"line_ending": "Unix"
			}
		},
		{
			"file": "contactcontroller.js",
			"settings":
			{
				"buffer_size": 200217,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "'cover_image':data.imgCoverUrl\n!$scope.existsInfonode(phone,'number','phones')\naddEmail !$scope.existsInfonode(email,'email','emails')\n!$scope.existsInfonode(website,'url','websites')\naddPhone !$scope.existsInfonode(social,'url','sociallinks')\naddGeo !$scope.existsInfonode(address,'formatted','addresses')",
			"settings":
			{
				"buffer_size": 306,
				"line_ending": "Unix"
			}
		},
		{
			"file": "leadcontrollers.js",
			"settings":
			{
				"buffer_size": 219885,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n        $scope.share = function (me) {\n            if ($scope.selectedPermisssions) {\n                console.log('in share function');\n                console.log($scope.selectedCards);\n                angular.forEach($scope.selectedCards, function (selected_lead) {\n                    if (selected_lead.owner.google_user_id == me) {\n                        \n                        var body = {'access': $scope.selected_access};\n                        var id = selected_lead.id;\n                        \n                        \n                        var params = {'id': id, 'access': $scope.selected_access};\n                        Lead.patch($scope, params);\n                        // who is the parent of this event .hadji hicham 21-07-2014.\n\n                        params[\"parent\"] = \"lead\";\n                        Event.permission($scope, params);\n                        Task.permission($scope, params);\n\n\n                        // $('#sharingSettingsModal').modal('hide');\n\n                        if ($scope.sharing_with.length > 0) {\n\n                            var items = [];\n\n                            angular.forEach($scope.sharing_with, function (user) {\n                                var item = {\n                                    'type': \"user\",\n                                    'value': user.entityKey\n                                };\n                                if (item.google_user_id != selected_lead.owner.google_user_id) items.push(item);\n                            });\n                            console.log(\"##################################################################\");\n                            \n                            if (items.length > 0) {\n                                var params = {\n                                    'about': selected_lead.entityKey,\n                                    'items': items\n                                };\n                                console.log(params);\n                                Permission.insert($scope, params);\n                            }\n                        }\n                        $scope.sharing_with = [];\n                    }\n                });\n            }\n        };",
			"settings":
			{
				"buffer_size": 2208,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/leads/lead_new.html",
			"settings":
			{
				"buffer_size": 69102,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/app.js",
			"settings":
			{
				"buffer_size": 15677,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/contacts/contact_new.html",
			"settings":
			{
				"buffer_size": 72840,
				"line_ending": "Unix"
			}
		},
		{
			"file": "accountcontrollers.js",
			"settings":
			{
				"buffer_size": 266901,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/services/leadservices.js",
			"settings":
			{
				"buffer_size": 33599,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/directives/directives.js",
			"settings":
			{
				"buffer_size": 33463,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/accounts/account_show.html",
			"settings":
			{
				"buffer_size": 383976,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/accounts/account_new.html",
			"settings":
			{
				"buffer_size": 97083,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/leads/lead_show.html",
			"settings":
			{
				"buffer_size": 298293,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/contacts/contact_show.html",
			"settings":
			{
				"buffer_size": 307155,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/services/contactservices.js",
			"settings":
			{
				"buffer_size": 26320,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/static/build/js/sync_ctrls_sers_scripts.js",
			"settings":
			{
				"buffer_size": 1583946,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "app.controller('ContactNewCtrl', ['$scope', '$http', 'Auth', 'Contact', 'Account', 'Edge', 'Map', 'Linkedin','Customfield',\n    function ($scope, $http, Auth, Contact, Account, Edge, Map, Linkedin, Customfield) {\n      $(\"ul.page-sidebar-menu li\").removeClass(\"active\");\n      $(\"#id_Contacts\").addClass(\"active\");\n\n      document.title = \"Contacts: New\";\n      trackMixpanelAction('CONTACT_NEW_VIEW');\n      $scope.isSignedIn = false;\n      $scope.immediateFailed = false;\n      $scope.nextPageToken = undefined;\n      $scope.prevPageToken = undefined;\n      $scope.isLoading = false;\n      $scope.nbLoads=0;\n      $scope.pagination = {};\n      $scope.currentPage = 01;\n      $scope.pages = [];\n      $scope.stage_selected={};\n      $scope.contacts = [];\n      $scope.contact = {};\n      $scope.contact.access ='public';\n      $scope.order = '-updated_at';\n      $scope.status = 'New';\n      $scope.showPhoneForm=false;\n      $scope.showEmailForm=false;\n      $scope.showWebsiteForm=false;\n      $scope.showSociallinkForm=false;\n      $scope.showCustomFieldForm =false;\n      $scope.phones=[];\n      $scope.addresses=[];\n          $scope.infonodes=[];\n          $scope.infonodes.addresses=[];\n      $scope.addresses=[];\n      $scope.emails=[];\n      $scope.websites=[];\n      $scope.sociallinks=[];\n      $scope.customfields=[];\n      $scope.results=[];\n      $scope.phone={};\n      $scope.notes=[];\n        $scope.accountsResults = [];\n      $scope.currentContact = {};\n      $scope.phone.type= 'work';\n      $scope.imageSrc = '/static/img/avatar_contact.jpg';\n      $scope.profile_img = {\n                            'profile_img_id':null,\n                            'profile_img_url':null\n                          };\n\n      $scope.contact_err={\n                      'firstname':false,\n                      'lastname':false,\n                   \n                      };\n      $scope.noLinkedInResults=false;\n      $scope.listPeople=[];\n      $scope.linkedProfile={};\n      $scope.linkedShortProfile={};\n      $scope.showUpload=false;  \n      $scope.sociallink={};\n      $scope.sociallink.url=\"\";\n      $scope.linkedShortProfiles=[];\n      $scope.accountFromLinkedin={};\n      $scope.contacts=[];\n      $scope.contacts.customfields=[];\n      $scope.inProcess=function(varBool,message){\n            if (varBool) {           \n              if (message) {\n                console.log(\"starts of :\"+message);\n              };\n              $scope.nbLoads=$scope.nbLoads+1;\n              if ($scope.nbLoads==1) {\n                $scope.isLoading=true;\n              };\n            }else{\n              if (message) {\n                console.log(\"ends of :\"+message);\n              };\n              $scope.nbLoads=$scope.nbLoads-1;\n              if ($scope.nbLoads==0) {\n                 $scope.isLoading=false;\n   \n              };\n\n            };\n          }        \n          $scope.apply=function(){\n           \n            if ($scope.$root.$$phase != '$apply' && $scope.$root.$$phase != '$digest') {\n                 $scope.$apply();\n                }\n                return false;\n          }\n      $scope.createPickerUploader = function() {\n          var developerKey = 'AIzaSyDHuaxvm9WSs0nu-FrZhZcmaKzhvLiSczY';\n          var picker = new google.picker.PickerBuilder().\n              addView(new google.picker.DocsUploadView()).\n              setCallback($scope.uploaderCallback).\n              setOAuthToken(window.authResult.access_token).\n              setDeveloperKey(developerKey).\n              setAppId('935370948155-qm0tjs62kagtik11jt10n9j7vbguok9d').\n              build();\n          picker.setVisible(true);\n      };\n\n      $scope.uploaderCallback = function(data) {\n          if (data.action == google.picker.Action.PICKED) {\n                if(data.docs){\n                  $scope.profile_img.profile_img_id = data.docs[0].id ;\n                  $scope.profile_img.profile_img_url = data.docs[0].url ;\n                  $scope.imageSrc = 'https://docs.google.com/uc?id='+data.docs[0].id;\n                  $scope.apply();\n                }\n          }\n      }\n      \n      $scope.initObject=function(obj){\n          for (var key in obj) {\n                obj[key]=null;\n              }\n      }\n      $scope.pushElement = function(elem, arr, infos) {\n            console.log(elem)\n            console.log(arr)\n            console.log(infos)\n            if (arr.indexOf(elem) == -1) {\n                // var copyOfElement = angular.copy(elem);\n                // arr.push(copyOfElement);\n                // $scope.initObject(elem);\n\n                switch (infos) {\n                    case 'phones' :\n                        if (elem.number) {\n                            var copyOfElement = angular.copy(elem);\n                            arr.push(copyOfElement);\n                            $scope.initObject(elem);\n                        }\n                        $scope.showPhoneForm = false;\n                        $scope.phone.type = 'work';\n                        $scope.phone.number = '';\n                        break;\n                    case 'emails' :\n                        if (elem.email) {\n                            var copyOfElement = angular.copy(elem);\n                            arr.push(copyOfElement);\n                            $scope.initObject(elem);\n                        }\n                        $scope.showEmailForm = false;\n                        $scope.email.email = ''\n                        break;\n                    case 'websites' :\n                        if (elem.url) {\n                            var copyOfElement = angular.copy(elem);\n                            arr.push(copyOfElement);\n                            $scope.initObject(elem);\n                        }\n                        $scope.website.url = '';\n                        $scope.showWebsiteForm = false;\n                        break;\n                    case 'sociallinks' :\n                        if (elem.url) {\n                            var copyOfElement = angular.copy(elem);\n                            arr.push(copyOfElement);\n                            $scope.initObject(elem);\n                        }\n                        $scope.sociallink.url = '';\n                        $scope.showSociallinkForm = false;\n                        break;\n                    case 'customfields' :\n                        if (elem.field && elem.value) {\n                            var copyOfElement = angular.copy(elem);\n                            arr.push(copyOfElement);\n                            $scope.initObject(elem);\n                        }\n                        $scope.customfield.field = '';\n                        $scope.customfield.value = '';\n                        $scope.showCustomFieldForm = false;\n                        break;\n                    case 'addresses' :\n                        if (elem.country) {\n                            var copyOfElement = angular.copy(elem);\n                            arr.push(copyOfElement);\n                            $scope.initObject(elem);\n                        }\n\n                        $('#addressmodal').modal('hide');\n\n                        break;\n                }\n            } else {\n                alert(\"item already exit\");\n            }\n        };\n  //HKA 01.06.2014 Delete the infonode on DOM\n      $scope.deleteInfos = function(arr,index){\n          arr.splice(index, 1);\n      };\n\n      $scope.runTheProcess = function(){\n        $scope.getCustomFields(\"contacts\");\n        $scope.mapAutocomplete();\n        //Map.justAutocomplete ($scope,\"relatedContactAddress\",$scope.currentContact.address);\n        ga('send', 'pageview', '/contacts/new');\n        window.Intercom('update');\n       };\n       $scope.messageFromSocialLinkCallback = function(event){\n        if (event.origin!=='https://accounts.google.com'){\n            $scope.saveLinkedinData(event.data);\n        }\n        };\n        $scope.saveLinkedinData=function(data){\n            $scope.clearContact();\n            var params={\n              'firstname':data.firstname,\n              'lastname':data.lastname,\n              'title':data.title\n            }\n            $scope.contact=$.extend(true, $scope.contact, params);\n            $scope.imageSrc=data.profile_img_url;\n            var phone={\n              'number':data.phone\n            };\n            $scope.pushElement(phone,$scope.phones,'phones');\n            $scope.addressModel=data.locality;\n            var email={\n              'email':data.email\n            };\n            $scope.email={};\n            $scope.pushElement(email,$scope.emails,'emails')\n            $scope.apply();\n        }\n\n        $scope.socialLinkOpener = function(socialLinkUrl){\n\n            window.open($scope.prepareUrl(socialLinkUrl),'winname','width=700,height=550');\n            window.addEventListener(\"message\", $scope.messageFromSocialLinkCallback, false);\n        };\n\n\n        $scope.getCustomFields=function(related_object){\n            Customfield.list($scope,{related_object:related_object});\n        }\n        $scope.listResponse=function(items,related_object){\n            $scope[related_object].customfields=items;\n            $scope.apply(); \n        }\n        $scope.addCustomField = function (customField,option) {  \n            if (customField) {\n                    if (!customField.field) {\n                        customField.field=customField.name;\n                    };\n                    var custom_value=null;\n                        if (option) {\n                            \n                            if (!customField.value) {\n                                customField.value=[];\n                            };\n                            customField.value.push(option);\n                            custom_value=JSON.stringify(customField.value);\n                        }else{\n\n                             custom_value=customField.value;\n                        };\n\n                        \n                        \n                    if (customField.field && customField.value) {\n\n                        var params = {\n                                    \"field\": customField.field,\n                                    \"property_type\":customField.id,\n                                    \"value\": custom_value\n                                };\n                        $scope.customfields.push(params);\n                        console.log($scope.customfields);\n\n                    }\n            }\n            $('#customfields').modal('hide');\n            $scope.customfield = {};\n            $scope.showCustomFieldForm = false;\n\n        };\n\n       // for the map \n\n    $scope.mapAutocomplete=function(){\n           // $scope.addresses = $scope.contact.addresses;\n            Map.autocomplete ($scope,\"pac-input\");\n        }\n      $scope.addNote = function(){\n       $scope.notes.push($scope.newnote)\n       $scope.newnote={}\n     }\n       $scope.addGeo = function(address){\n               console.log(\"geo added\");\n               console.log(address);\n               $scope.infonodes.addresses.push(address);\n               $scope.addresses.push(address);\n               $scope.apply();\n               console.log($scope.infonodes.addresses);\n            };\n        $scope.setLocation=function(address){\n          console.log(\"triggered\");\n            Map.setLocation($scope,address);\n        }\n        $scope.notFoundAddress=function(address,inputId){\n            console.log(address.name);\n            $scope.addressNotFound=address.name;\n            $('#confirmNoGeoAddress').modal('show');\n            $scope.apply(); \n            console.log(\"inputId\");\n            console.log(inputId);\n\n            $('#'+inputId).val(\"\");           \n        }\n        $scope.confirmaddress=function(){\n             $scope.account.addresses.push({'formatted':$scope.addressNotFound});\n             $scope.addressNotFound='';\n             $('#confirmNoGeoAddress').modal('hide');\n             $scope.apply();\n\n        }\n       //\n\n\n\n\n\n        // We need to call this to refresh token when user credentials are invalid\n       $scope.refreshToken = function() {\n            Auth.refreshToken();\n       };\n      $scope.getResults=function(val,location){\n          console.log('here executed');\n          var url=ROOT+location+'?alt=json'\n          var config={\n            headers:  {\n                'Authorization': 'Bearer '+localStorage['access_token'],\n                'Accept': 'application/json'\n            }\n          }\n          var params= {\n                    \"q\": val\n                  } ;\n         return $http.post(url,params,config).then(function(response){\n                  if (response.data.items) {\n                    return response.data.items;\n                  }else{\n                    return [];\n                  };\n                  return response.data.items;\n                });\n      }\n\n      $scope.selectAccount = function(){\n          $scope.contact.account = $scope.searchAccountQuery;\n\n       };\n       $scope.accountInserted = function(resp){\n          console.log('account inserted ok');\n          console.log(resp);\n          $scope.contact.account = resp;\n          $scope.save($scope.contact);\n      };\n       $scope.prepareInfonodes = function(){\n        var infonodes = [];\n        angular.forEach($scope.websites, function(website){\n            var infonode = {\n                            'kind':'websites',\n                            'fields':[\n                                    {\n                                    'field':\"url\",\n                                    'value':website.url\n                                    }\n                            ]\n\n                          }\n            infonodes.push(infonode);\n        });\n        angular.forEach($scope.sociallinks, function(sociallink){\n            var infonode = {\n                            'kind':'sociallinks',\n                            'fields':[\n                                    {\n                                    'field':\"url\",\n                                    'value':sociallink.url\n                                    }\n                            ]\n\n                          }\n            infonodes.push(infonode);\n        });\n        angular.forEach($scope.customfields, function(customfield){\n            var infonode = {\n                            'kind':'customfields',\n                            'fields':[\n                                    {\n                                    'field':customfield.field,\n                                    'property_type':customfield.property_type,\n                                    'value':customfield.value\n                                    }\n                            ]\n\n                          }\n            infonodes.push(infonode);\n        });\n        angular.forEach($scope.infonodes.addresses, function(address){\n                 console.log(address);\n                 var infonode ={\n                'kind':'addresses',\n                'fields':[\n                    {\n                      \"field\": \"street\",\n                      \"value\": address.street\n                    },\n                    {\n                      \"field\": \"city\",\n                      \"value\": address.city\n                    },\n                    {\n                      \"field\": \"state\",\n                      \"value\": address.state\n                    },\n                    {\n                      \"field\": \"postal_code\",\n                      \"value\": address.postal_code\n                    },\n                    {\n                      \"field\": \"country\",\n                      \"value\": address.country\n                    },\n                    {\n                      \"field\": \"formatted\",\n                      \"value\": address.formatted\n                    }\n                  ]\n                };\n                if (address.lat&&address.lng) {\n                  infonode.fields.push({\"field\": \"lat\",\"value\": address.lat.toString()});\n                  infonode.fields.push({\"field\": \"lon\",\"value\": address.lng.toString()});\n                };\n                infonodes.push(infonode);\n            });\n        return infonodes;\n    }\n          $scope.$watch('contact', function(newVal, oldVal){\n          if (newVal.firstname)  $scope.contact_err.firstname=false;\n          if (newVal.lastname)  $scope.contact_err.lastname=false;\n\n      }, true);\n          $scope.validateBeforeSave=function(contact){\n           if (!contact.firstname) $scope.contact_err.firstname=true;\n            else $scope.contact_err.firstname=false;  \n          if (!contact.lastname) $scope.contact_err.lastname=true;\n            else $scope.contact_err.lastname=false;\n          if (!$scope.contact_err.firstname && !$scope.contact_err.lastname)  $scope.save(contact)\n      }\n      // new Contact\n     $scope.save = function(contact , force){\n        force = force || false;\n            var sameContactModal = angular.element(\"#sameContactModal\");\n            if (force && sameContactModal.length) {\n                sameContactModal.modal(\"hide\");\n                $('body').removeClass('modal-open');\n                $('.modal-backdrop').remove();\n            }\n          var delayInsert = false;\n          if ($scope.addressmodal) {\n                          $scope.addGeo({'formatted':$scope.addressmodal});\n          };\n          var params ={\n                'firstname':contact.firstname,\n                'lastname':contact.lastname,\n                'title':contact.title,\n                'tagline':contact.tagline,\n                'introduction':contact.introduction,\n                'phones':$scope.phones,\n                'emails':$scope.emails,\n                'infonodes':$scope.prepareInfonodes(),\n                'access': contact.access,\n                'notes':$scope.notes\n              };\n              var test=$scope.prepareInfonodes();\n              console.log(\"test\");\n              console.log(test);\n          if (typeof(contact.account)=='object'){\n              params['account'] = contact.account.entityKey;\n          }else if($scope.searchAccountQuery){\n              if ($scope.searchAccountQuery.length>0){\n                // create a new account with this account name\n                var accountparams={};\n                if (!$scope.isEmpty($scope.accountFromLinkedin)) {\n                  accountparams=$scope.accountFromLinkedin;\n                  $scope.accountFromLinkedin={};\n                }else{\n                  accountparams = {\n                            'name': $scope.searchAccountQuery,\n                            'access': contact.access\n                          };\n                };\n                $scope.contact = contact;\n                Account.insert($scope,accountparams);\n                delayInsert = true;\n              };\n          };\n          if(!delayInsert){\n          if ($scope.profile_img.profile_img_id){\n              params['profile_img_id'] = $scope.profile_img.profile_img_id;\n              if($scope.profile_img.profile_img_id){\n                  params['profile_img_url'] = 'https://docs.google.com/uc?id='+$scope.profile_img.profile_img_id;\n              }else{\n                  if($scope.profile_img.profile_img_url){\n                      params['profile_img_url'] = $scope.profile_img.profile_img_url;\n                  }\n                  \n              }\n              \n          }\n          if($scope.profile_img.profile_img_url){\n                      params['profile_img_url'] = $scope.profile_img.profile_img_url;\n          }\n            Contact.create($scope, params, force);\n          }\n\n      };\n      $scope.contactInserted = function(resp){\n          window.location.replace('/#/contacts/show/'+resp.id);\n      }\n\n      $scope.selectAccount = function(){\n        $scope.contact.account = $scope.searchAccountQuery;\n\n      };\n       $scope.getLinkedinProfile=function(){\n              var params={\n                \"firstname\":$scope.contact.firstname,\n                \"lastname\":$scope.contact.lastname\n                }\n                var linkedurl=null;\n                $scope.inNoResults=false;\n                if ($scope.contact.sociallinks==undefined) {\n                  $scope.contact.sociallinks=[];\n                };\n                var savedEntityKey=null;\n                if ($scope.contact.sociallinks.length > 0) {\n                   angular.forEach($scope.contact.sociallinks, function(link){\n                                    if ($scope.linkedinUrl(link.url)) {\n                                      linkedurl=link.url;\n                                      savedEntityKey=link.entityKey;\n                                    };\n                                });\n                };\n                 if (linkedurl) {\n                    var par={'url' : linkedurl};\n                   Linkedin.profileGet(par,function(resp){\n                      if(!resp.code){\n                       $scope.inProfile.fullname=resp.fullname;\n                       $scope.inProfile.title=resp.title;\n                       $scope.inProfile.formations=resp.formations\n                       $scope.inProfile.locality=resp.locality;\n                       $scope.inProfile.relation=resp.relation;\n                       $scope.inProfile.industry=resp.industry;\n                       $scope.linkedProfileresume=resp.resume;\n                       $scope.inProfile.entityKey=savedEntityKey;\n                       $scope.inProfile.url=linkedurl;\n                       $scope.inProfile.resume=resp.resume;\n                       $scope.inProfile.skills=resp.skills;\n                       $scope.inProfile.current_post=resp.current_post;\n                       $scope.inProfile.past_post=resp.past_post;\n                       $scope.inProfile.certifications=JSON.parse(resp.certifications);\n                       $scope.inProfile.experiences=JSON.parse(resp.experiences);\n                       if($scope.inProfile.experiences){\n                       $scope.inProfile.experiences.curr=$scope.inProfile.experiences['current-position'];\n                       $scope.inProfile.experiences.past=$scope.inProfile.experiences['past-position'];\n                       }\n                       if ($scope.contact.addresses==undefined||$scope.contact.addresses==[]) {\n                          $scope.addGeo({'formatted':$scope.inProfile.locality});\n                        };\n                       $scope.linkedLoader=false;\n                       $scope.inIsLoading = false;\n                       $scope.isLoading = false;\n                       $scope.apply();\n                      }else {\n                        console.log(\"no 401\");\n                         if(resp.code==401){\n                          // $scope.refreshToken();\n                          $scope.isLoading = false;\n                          $scope.apply();\n                         };\n                      }\n                   });\n                }else{\n                  Linkedin.listPeople(params,function(resp){\n                     $scope.inIsSearching=true;\n                     $scope.inShortProfiles=[];\n                     $scope.inProfile={};\n                     if(!resp.code){\n                      $scope.inIsSearching=false;\n                      if (resp.items==undefined) {\n                        $scope.inList=[];\n                        $scope.inNoResults=true;\n                        $scope.inIsSearching=false;\n                      }else{\n                        $scope.inList=resp.items;\n                        if (resp.items.length < 4) {\n                          console.log(\"in check of 3\");\n                          angular.forEach(resp.items, function(item){\n                              console.log(item.url);\n                              $scope.getLinkedinByUrl(item.url);\n                        });\n                        }\n                      };\n                         $scope.isLoading = false;\n                         $scope.$apply();\n                        }else {\n                          console.log(\"no 401\");\n                           if(resp.code==401){\n                            // $scope.refreshToken();\n                           console.log(\"no resp\");\n                            $scope.isLoading = false;\n                            $scope.$apply();\n                           };\n                         if (resp.code >= 503) {\n                                $scope.inNoResults = true;\n                                $scope.inIsSearching = false;\n                                $scope.apply();\n                            }\n                        }\n                  });            \n                };\n            }\n       // $scope.getLinkedinByUrl=function(url){\n       //         $scope.inIsLoading=true;\n       //         var par={'url' : url};\n       //         Linkedin.profileGet(par,function(resp){\n       //                if(!resp.code){\n       //                   prof={};\n       //                   prof.fullname=resp.fullname;\n       //                   prof.url=url;\n       //                   prof.profile_picture=resp.profile_picture;\n       //                   prof.title=resp.title;\n       //                   prof.locality=resp.locality;\n       //                   prof.industry=resp.industry; \n       //                   prof.formations=resp.formations\n       //                   prof.resume=resp.resume;\n       //                   prof.skills=resp.skills;\n       //                   prof.current_post=resp.current_post;\n       //                   prof.past_post=resp.past_post;\n       //                   prof.experiences=JSON.parse(resp.experiences);  \n       //                   if(prof.experiences){\n       //                    prof.experiences.curr=prof.experiences['current-position'];\n       //                    prof.experiences.past=prof.experiences['past-position'];\n       //                   }         \n       //                   $scope.inShortProfiles.push(prof);\n       //                   $scope.inIsLoading=false;\n       //                   $scope.apply();\n       //                }else {\n       //                   if(resp.code==401){\n       //                    $scope.inIsLoading=false;\n       //                    $scope.apply();\n       //                   };\n       //                }\n       //             });\n       //      }\n        $scope.twitterUrl=function(url){\n                         var match=\"\";\n                         var matcher = new RegExp(\"twitter\");\n                         var test = matcher.test(url);                        \n                         return test;\n        }\n        $scope.getTwitterProfile=function(){\n              console.log(\"getTwitterProfile\");\n              var params={\n                \"firstname\":$scope.contact.firstname,\n                \"lastname\":$scope.contact.lastname\n                }\n                var twitterurl=null;\n                $scope.twNoResults=false;\n                if ($scope.contact.sociallinks==undefined) {\n                  $scope.contact.sociallinks=[];\n                };\n                var savedEntityKey=null;\n                if ($scope.contact.sociallinks.length > 0) {\n                   angular.forEach($scope.contact.sociallinks, function(link){\n                                    if ($scope.twitterUrl(link.url)) {\n                                      twitterurl=link.url;\n                                      savedEntityKey=link.entityKey;\n                                    };\n                                });\n                };\n                 if (twitterurl) {\n                    var par={'url' : twitterurl};\n                   Linkedin.getTwitterProfile(par,function(resp){\n                      if(!resp.code){\n                       $scope.twProfile.name=resp.name;\n                       $scope.twProfile.screen_name=resp.screen_name;\n                       $scope.twProfile.created_at=resp.created_at\n                       $scope.twProfile.description_of_user=resp.description_of_user;\n                       $scope.twProfile.followers_count=resp.followers_count;\n                       $scope.twProfile.friends_count=resp.friends_count; \n                       $scope.twProfile.id=resp.id; \n                       $scope.twProfile.lang=resp.lang; \n                       $scope.twProfile.language=resp.language; \n                       $scope.twProfile.last_tweet_favorite_count=resp.last_tweet_favorite_count; \n                       $scope.twProfile.last_tweet_retweet_count=resp.last_tweet_retweet_count; \n                       $scope.twProfile.last_tweet_text=resp.last_tweet_text; \n                       $scope.twProfile.location=resp.location; \n                       $scope.twProfile.nbr_tweets=resp.nbr_tweets; \n                       $scope.twProfile.profile_banner_url=resp.profile_banner_url+'/1500x500'; \n                       $scope.twProfile.profile_image_url_https=resp.profile_image_url_https; \n                       $scope.twProfile.url_of_user_their_company=resp.url_of_user_their_company; \n                       $scope.twProfile.entityKey=savedEntityKey;\n                       $scope.twProfile.url=twitterurl;\n                       if ($scope.contact.addresses==undefined||$scope.contact.addresses==[]) {\n                          $scope.addGeo({'formatted':$scope.twProfile.location});\n                        };\n                       $scope.twIsLoading = false;\n                       $scope.isLoading = false;\n                       $scope.apply();\n                      }else {\n                        console.log(\"no 401\");\n                         if(resp.code==401){\n                          // $scope.refreshToken();\n                          $scope.isLoading = false;\n                          $scope.apply();\n                         };\n                      }\n                   });\n                }else{\n                  Linkedin.getTwitterList(params,function(resp){\n                     $scope.twIsSearching=true;\n                     $scope.twShortProfiles=[];\n                     $scope.twProfile={};\n                     if(!resp.code){\n                      $scope.twIsSearching=false;\n                      if (resp.items==undefined) {\n                        $scope.twList=[];\n                        $scope.twNoResults=true;\n                        $scope.twIsSearching=false;\n                      }else{\n                        console.log(resp.items);\n                        $scope.twList=resp.items;\n                        console.log($scope.twShortProfiles);\n                        $scope.apply();\n                        console.log($scope.twList.length)\n                        if (resp.items.length < 4) {\n                          console.log(\"in check of 3\");\n                          angular.forEach(resp.items, function(item){\n                              console.log(item.url);\n                              $scope.getTwitterByUrl(item.url);\n                        });\n                        }\n                      };\n                         $scope.isLoading = false;\n                         $scope.apply();\n                        }else {\n                          console.log(\"no 401\");\n                           if(resp.code==401){\n                            // $scope.refreshToken();\n                           console.log(\"no resp\");\n                            $scope.isLoading = false;\n                            $scope.$apply();\n                           };\n                         if (resp.code >= 503) {\n                            console.log(\"503 error\")\n                            $scope.twNoResults = true;\n                            $scope.twIsSearching = false;\n                            $scope.apply();\n                        }\n                        }\n                  });            \n                };\n            }\n\n              $scope.getTwitterByUrl=function(url){\n               $scope.twIsLoading=true;\n               var par={'url' : url};\n               Linkedin.getTwitterProfile(par,function(resp){\n                      if(!resp.code){\n                         prof={};\n                         prof.name=resp.name;\n                         prof.screen_name=resp.screen_name;\n                         prof.created_at=resp.created_at\n                         prof.description_of_user=resp.description_of_user;\n                         prof.followers_count=resp.followers_count;\n                         prof.friends_count=resp.friends_count; \n                         prof.id=resp.id; \n                         prof.lang=resp.lang; \n                         prof.language=resp.language; \n                         prof.last_tweet_favorite_count=resp.last_tweet_favorite_count; \n                         prof.last_tweet_retweet_count=resp.last_tweet_retweet_count; \n                         prof.last_tweet_text=resp.last_tweet_text; \n                         prof.location=resp.location; \n                         prof.nbr_tweets=resp.nbr_tweets; \n                         prof.profile_banner_url=resp.profile_banner_url+'/1500x500'; \n                         prof.profile_image_url_https=resp.profile_image_url_https; \n                         prof.url_of_user_their_company=resp.url_of_user_their_company; \n                         prof.url=url;\n                         $scope.twShortProfiles.push(prof);\n                         $scope.twIsLoading=false;\n                         $scope.apply();\n                      }else {\n                         if(resp.code==401){\n                          $scope.twIsLoading=false;\n                          $scope.apply();\n                         };\n                      }\n                   });\n            }\n              $scope.cancelSelection=function(arrayname){\n                  console.log(arrayname)\n                 $scope[arrayname]=[];\n                 console.log(\"canceling\");\n                  console.log(arrayname)\n                 $scope.apply();\n\n              }\n              $scope.saveTwitterUrl=function(shortProfile){\n              //$scope.clearContact();\n              $scope.twList=[];\n              $scope.twShortProfiles =[];\n              $scope.twProfile={};\n              $scope.twProfile=shortProfile;\n              $scope.sociallink={'url':$scope.twProfile.url};\n              $scope.website={'url':$scope.twProfile.url_of_user_their_company};\n              $scope.savedSociallink=$scope.twProfile.url;\n              $scope.pushElement($scope.sociallink,$scope.sociallinks,'sociallinks');\n              $scope.pushElement($scope.website,$scope.websites,'websites');\n              if ($scope.imageSrc=='/static/img/avatar_contact.jpg'||$scope.imageSrc=='') {\n                console.log(\"innnnnn no imageSrc\");\n                $scope.imageSrc=$scope.twProfile.profile_image_url_https;\n                $scope.profile_img.profile_img_url = $scope.twProfile.profile_image_url_https;\n              };\n              /*$scope.imageSrc = $scope.twProfile.profile_picture;*/\n            //  $scope.profile_img.profile_img_url = $scope.twProfile.profile_picture;\n              /*$scope.lead.source='Linkedin';\n              $scope.lead.industry=''\n              if (!$scope.lead.title) {\n                $scope.lead.title = $scope.twProfile.title;\n              };\n              if($scope.twProfile.current_post){\n                    if ($scope.twProfile.current_post[0]){\n                        $scope.lead.company = $scope.twProfile.current_post[0];\n                    }\n                  }\n              */\n              /*if ($scope.twProfile.location!=''&&$scope.twProfile.location!=null) {*/\n               if (!$scope.addressModel) {\n                    $scope.addressModel=$scope.twProfile.location; \n                  }else{\n                    if ($scope.addressModel.length < $scope.twProfile.location.length) {\n                      $scope.addressModel=$scope.twProfile.location;  \n                    };\n                  };\n              \n                 // $scope.addGeo({'formatted':$scope.twProfile.location});\n              /*};*/\n              $scope.apply();\n          }\n            $scope.prepareUrl=function(url){\n                    var pattern=/^[a-zA-Z]+:\\/\\//;\n                     if(!pattern.test(url)){                        \n                         url = 'http://' + url;\n                     }\n                     return url;\n        }\n        $scope.isEmpty=function(obj){\n          return jQuery.isEmptyObject(obj);\n        }\n        $scope.isEmptyArray=function(Array){\n                  if (Array!=undefined && Array.length>0) {\n                  return false;\n                  }else{\n                      return true;\n                  };    \n              \n          }\n        $scope.urlSource=function(url){\n            var links=[\"aim\",\"bebo\",\"behance\",\"blogger\",\"delicious\",\"deviantart\",\"digg\",\"dribbble\",\"evernote\",\"facebook\",\"fastfm\",\"flickr\",\"formspring\",\"foursquare\",\"github\",\"google-plus\",\"instagram\",\"linkedin\",\"myspace\",\"orkut\",\"path\",\"pinterest\",\"quora\",\"reddit\",\"rss\",\"soundcloud\",\"stumbleupn\",\"technorati\",\"tumblr\",\"twitter\",\"vimeo\",\"wordpress\",\"yelp\",\"youtube\"];\n                    var match=\"\";\n                    angular.forEach(links, function(link){\n                         var matcher = new RegExp(link);\n                         var test = matcher.test(url);\n                         if(test){  \n                             match=link;\n                         }\n                    });\n                    if (match==\"\") {\n                        match='globe';\n                    };\n                    return match;\n        }\n    $scope.showSelectButton=function(index){\n      $(\"#item_\"+index).addClass('grayBackground');\n      $(\"#select_\"+index).removeClass('selectLinkedinButton');\n      if (index!=0) {\n         $(\"#item_0\").removeClass('grayBackground');\n         $(\"#select_0\").addClass('selectLinkedinButton');\n      };\n    }\n    $scope.hideSelectButton=function(index){\n   \n      if (!$(\"#select_\"+index).hasClass('alltimeShowSelect')) {\n        $(\"#item_\"+index).removeClass('grayBackground');\n        $(\"#select_\"+index).addClass('selectLinkedinButton');\n      };\n      if (index!=0) {\n         $(\"#item_0\").addClass('grayBackground');\n         $(\"#select_0\").removeClass('selectLinkedinButton');\n      };\n      \n    }; \n    $scope.showSelectTwitter=function(index){\n      $(\"#titem_\"+index).addClass('grayBackground');\n      $(\"#tselect_\"+index).removeClass('selectLinkedinButton');\n      if (index!=0) {\n         $(\"#titem_0\").removeClass('grayBackground');\n         $(\"#tselect_0\").addClass('selectLinkedinButton');\n      };\n    }\n    $scope.hideSelectTwitter=function(index){\n   \n      if (!$(\"#tselect_\"+index).hasClass('alltimeShowSelect')) {\n        $(\"#titem_\"+index).removeClass('grayBackground');\n        $(\"#tselect_\"+index).addClass('selectLinkedinButton');\n      };\n      if (index!=0) {\n         $(\"#titem_0\").addClass('grayBackground');\n         $(\"#tselect_0\").removeClass('selectLinkedinButton');\n      };\n      \n    }; \n      $scope.clearLinkedin=function(){\n        $scope.linkedProfile={};\n        $scope.linkedShortProfile={};\n        $scope.apply()\n      }\n      $scope.clearContact=function(){\n        $scope.inList=[];\n        $scope.twList=[];\n        $scope.inCList=[];\n        $scope.contact={};\n        $scope.imageSrc='/static/img/avatar_contact.jpg';\n        $scope.searchAccountQuery=null;\n        $scope.addresses=[];\n        $scope.websites=[];\n        $scope.phones=[];\n        $scope.emails=[];        \n        $scope.addressModel=null;\n        $scope.sociallinks=[];\n        $scope.linkedProfile={};\n        $scope.linkedShortProfile={};\n        $scope.listPeople=[];\n         $scope.twList=[];\n              $scope.twShortProfiles =[];\n              $scope.twProfile={};\n        $scope.apply();\n      }\n       $scope.extractCompanyName=function(company){\n              var i=company.length-1;\n              while (i >0) {\n                  if (company.charAt(i)==' '||company.charAt(i)==',') {\n                    company=company.substring(0, i-1);\n                  }else{\n                    return company;\n                  };\n                  i=i-1;\n                \n              }\n           }\n\n      $scope.saveLinkedinUrl=function(shortProfile){\n          //$scope.clearContact();\n          $scope.inList=[];\n          $scope.inShortProfiles=[];\n          $scope.inProfile={};\n          $scope.inProfile=shortProfile;\n          console.log(\"shoooort profile\");\n          console.log($scope.inProfile);\n          $scope.sociallink={'url':$scope.inProfile.url};\n          $scope.savedSociallink=$scope.inProfile.url;\n          $scope.pushElement($scope.sociallink,$scope.sociallinks,'sociallinks');\n          $scope.imageSrc = $scope.inProfile.profile_picture;\n          $scope.profile_img.profile_img_url = $scope.inProfile.profile_picture;\n          if ($scope.inProfile.title) {\n            $scope.contact.title = $scope.inProfile.title;\n          };\n          if($scope.inProfile.current_post){\n                if ($scope.inProfile.current_post[0]){\n                    console.log(\"company\");\n                    console.log($scope.inProfile.current_post[0]);\n                       var params_search_account ={};\n                       $scope.result = undefined;\n                       $scope.q = undefined;\n                      params_search_account['q'] = $scope.extractCompanyName($scope.inProfile.current_post[0]);\n                      console.log(\"params_search_account['q']\");\n                      console.log(params_search_account['q']);\n                      Account.searchb(params_search_account,function(resp){\n                        if (resp.items) {\n                            console.log(\"resp.items from account search\");\n                            console.log(resp.items);\n                            $scope.accountsResults = resp.items;\n                            if (!$scope.isEmptyArray($scope.accountsResults)) {\n                              $scope.contact.account=$scope.accountsResults[0];\n                              $scope.searchAccountQuery=$scope.accountsResults[0];                    \n                            }else{\n                              $scope.searchAccountQuery=$scope.extractCompanyName($scope.inProfile.current_post[0]);\n                            };\n                            $scope.apply();\n                        }else{\n                          console.log(\"in else of search\");\n                          console.log(\"params_search_account['q']\");\n                          console.log(params_search_account['q']);\n                          $scope.searchAccountQuery=params_search_account['q'];\n                          var params={\n                             \"company\":params_search_account['q']\n                            }  \n                          Linkedin.listCompanies(params,function(resp){\n                             $scope.inCIsSearching=true;\n                             $scope.inCShortProfiles=[];\n                             $scope.inCProfile={};\n                             if(!resp.code){\n                              $scope.inCIsSearching=false;\n                              if (resp.items==undefined) {\n                                $scope.inCList=[];\n                                $scope.inCNoResults=true;\n                                $scope.inCIsSearching=false;\n                                console.log('finishing companies list');\n                              }else{\n                                $scope.inCList=resp.items;\n                                console.log(\"resp.items\");\n                                console.log(resp.items);\n                                if (resp.items.length < 4) {\n                                    console.log(\"in check of 3\");\n                                    angular.forEach(resp.items, function(item){\n                                        console.log(item.url);\n                                        $scope.getCLinkedinByUrl(item.url);\n                                  });\n                                }\n                                console.log('finishing companies list');\n                              };  \n                                 $scope.isLoading = false;\n                                 $scope.$apply();\n                                }else {\n                                  console.log(\"no 401\");\n                                   if(resp.code==401){\n                                    // $scope.refreshToken();\n                                    $scope.isLoading = false;\n                                    $scope.$apply();\n                                   };\n                                }\n                          });    \n                          $scope.apply();\n                        }\n                      });\n                }\n              }\n          if (!$scope.addressModel) {\n                    $scope.addressModel=$scope.inProfile.locality;\n                  }else{\n                    if ($scope.addressModel.length < $scope.inProfile.locality.length) {\n                          $scope.addressModel=$scope.inProfile.locality;\n                    };\n                  };\n          $scope.apply();\n      }\n      $scope.getCLinkedinByUrl=function(url){\n              console.log('innnnnn getLinkedinByUrl');\n               $scope.linkedLoader=true;\n               var par={'url' : url};\n               Linkedin.getCompany(par,function(resp){\n                      if(!resp.code){\n                         var prof={};\n                         prof.company_size=resp.company_size;\n                         prof.headquarters=resp.headquarters;\n                         prof.followers=resp.followers;\n                         prof.founded=resp.founded;\n                         prof.locality=resp.locality;\n                         prof.industry=resp.industry; \n                         prof.logo=resp.logo\n                         prof.name=resp.name;\n                         prof.summary=resp.summary;\n                         prof.top_image=resp.top_image;\n                         prof.type=resp.type;\n                         prof.url=resp.url;\n                         prof.website=resp.website;    \n                         $scope.inCShortProfiles.push(prof);\n                         $scope.inCIsLoading=false;\n                         $scope.apply();\n                      }else {\n                        console.log(\"no 401\");\n                         if(resp.code==401){\n                          // $scope.refreshToken();\n                         console.log(\"no resp\");\n                          $scope.linkedLoader=false;\n                          $scope.apply();\n                         };\n                      }\n                   });\n            }\n         $scope.saveCLinkedinUrl=function(shortProfile){\n            $scope.inCList=[];\n            $scope.inCShortProfiles=[];\n            $scope.inCProfile={};\n            $scope.accountFromLinkedin={\n              'industry':shortProfile.industry,\n              'name':shortProfile.name,\n              'infonodes': [{'kind': 'sociallinks','fields': [{'field': \"url\",'value': shortProfile.url}]},{'kind': 'websites','fields': [{'field': \"url\",'value': shortProfile.website}]}],\n              'logo_img_url':shortProfile.logo,\n              'addresses':[{'formatted':shortProfile.headquarters,city:null,country:null,street:null}],\n              'access':'public'\n            }\n            console.log(\"object inserted\");\n            console.log($scope.accountFromLinkedin);\n            $scope.addGeo({'formatted':shortProfile.headquarters,city:null,country:null,street:null});\n            $scope.apply();\n          }\n         $scope.showSelectButton=function(index){\n      $(\"#item_\"+index).addClass('grayBackground');\n      $(\"#select_\"+index).removeClass('selectLinkedinButton');\n      if (index!=0) {\n         $(\"#item_0\").removeClass('grayBackground');\n         $(\"#select_0\").addClass('selectLinkedinButton');\n      };\n    }\n    $scope.hideSelectButton=function(index){\n   \n      if (!$(\"#select_\"+index).hasClass('alltimeShowSelect')) {\n        $(\"#item_\"+index).removeClass('grayBackground');\n        $(\"#select_\"+index).addClass('selectLinkedinButton');\n      };\n      if (index!=0) {\n         $(\"#item_0\").addClass('grayBackground');\n         $(\"#select_0\").removeClass('selectLinkedinButton');\n      };\n      \n    }; \n    $scope.addLinkedIn = function(social){\n      $scope.getLinkedinByUrl(social.url);\n    };\n    $scope.mergedContacts = 0;\n    $scope.mergeContact = function (baseContact, newContact) {\n        var delayInsert = false;\n        if ($scope.addressmodal) {\n            $scope.addGeo({'formatted': $scope.addressmodal});\n        };\n        var params = {\n            'firstname': newContact.firstname,\n            'lastname': newContact.lastname,\n            'title': newContact.title,\n            'tagline': newContact.tagline,\n            'introduction': newContact.introduction,\n            'phones': $scope.phones,\n            'emails': $scope.emails,\n            'infonodes': $scope.prepareInfonodes(),\n            'access': newContact.access,\n            'notes': $scope.notes\n        };\n        if (typeof(newContact.account) == 'object') {\n            params['account'] = newContact.account.entityKey;\n        } else if ($scope.searchAccountQuery) {\n            if ($scope.searchAccountQuery.length > 0) {\n                // create a new account with this account name\n                var accountparams = {};\n                if (!$scope.isEmpty($scope.accountFromLinkedin)) {\n                    accountparams = $scope.accountFromLinkedin;\n                    $scope.accountFromLinkedin = {};\n                } else {\n                    accountparams = {\n                        'name': $scope.searchAccountQuery,\n                        'access': newContact.access\n                    };\n                }\n                ;\n                $scope.contact = newContact;\n                Account.insert($scope, accountparams);\n                delayInsert = true;\n            };\n        };\n        if (!delayInsert) {\n            if ($scope.profile_img.profile_img_id) {\n                params['profile_img_id'] = $scope.profile_img.profile_img_id;\n                if ($scope.profile_img.profile_img_id) {\n                    params['profile_img_url'] = 'https://docs.google.com/uc?id=' + $scope.profile_img.profile_img_id;\n                } else {\n                    if ($scope.profile_img.profile_img_url) {\n                        params['profile_img_url'] = $scope.profile_img.profile_img_url;\n                    }\n\n                }\n\n            }\n            if ($scope.profile_img.profile_img_url) {\n                params['profile_img_url'] = $scope.profile_img.profile_img_url;\n            }\n\n            //Contact.create($scope, params);\n            var params = {base_id: baseContact.id, new_contact: params};\n            Contact.mergeContact($scope, params);\n        }\n\n    };\n    $scope.openContactDetailView = function (id) {\n        var width = screen.width / 2;\n        var height = screen.width / 2;\n        var left = (screen.width / 2) - (width / 2);\n        var top = (screen.height / 2) - (height / 2);\n        var url = '/#/contacts/show/' + id;\n        var windowFeatures = \"scrollbars=yes, resizable=yes, top=\" + top + \", left=\" + left +\n            \", width=\" + width + \", height=\" + height + \"menubar=no,resizable=no,status=no \";\n        window.open(url, \"_blank\", windowFeatures);\n    };\n\n   // Google+ Authentication\n     Auth.init($scope);\n}]);\n",
			"settings":
			{
				"buffer_size": 51638,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/base.html",
			"settings":
			{
				"buffer_size": 37418,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/model.py",
			"settings":
			{
				"buffer_size": 75673,
				"line_ending": "Unix"
			}
		},
		{
			"file": "searchcontrollers.js",
			"settings":
			{
				"buffer_size": 24445,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/static/app/views/accountlist.html",
			"settings":
			{
				"buffer_size": 8546,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/accounts/account_list.html",
			"settings":
			{
				"buffer_size": 68669,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/contacts/contact_list.html",
			"settings":
			{
				"buffer_size": 72764,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/leads/lead_list.html",
			"settings":
			{
				"buffer_size": 64124,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/opportunities/opportunity_show.html",
			"settings":
			{
				"buffer_size": 181567,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/opportunities/opportunity_list.html",
			"settings":
			{
				"buffer_size": 77724,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/cases/case_list.html",
			"settings":
			{
				"buffer_size": 61105,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/activities/all_tasks.html",
			"settings":
			{
				"buffer_size": 106886,
				"line_ending": "Unix"
			}
		},
		{
			"file": "opportunitycontroller.js",
			"settings":
			{
				"buffer_size": 151135,
				"line_ending": "Unix"
			}
		},
		{
			"file": "casecontrollers.js",
			"settings":
			{
				"buffer_size": 87160,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 14598 files for \"responseCustomFields\"\n\n/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/services/infonodeservices.js:\n   49                // Call the method $apply to make the update on the scope\n   50                   $scope.$apply();\n   51:                  $scope.responseCustomFields();\n   52                   console.log($scope.infonodes.customfields);\n   53  \n\n/Users/y_hamidia/Documents/Dev/iogrow/static/build/js/sync_ctrls_sers_scripts.js:\n  335                // Call the method $apply to make the update on the scope\n  336                   $scope.$apply();\n  337:                  $scope.responseCustomFields();\n  338                   console.log($scope.infonodes.customfields);\n  339  \n\n/Users/y_hamidia/Documents/Dev/iogrow/static/build/js/sync_ctrls_sers_scripts.min.js:\n    1: function trackMixpanelAction(actionName){var user={email:document.getElementById(\"userEmail\").value,name:document.getElementById(\"userDisplayname\").value,created_at:document.getElementById(\"usercreated_at\").value,language:document.getElementById(\"userLanguage\").value,organization:document.getElementById(\"userorganization\").value,id:document.getElementById(\"userId\").value};mixpanel.identify(user.id),mixpanel.people.set({$email:user.email,$name:user.name,$created:user.created_at,$organization:user.organization,$language:user.language}),mixpanel.track(actionName,{Displayname:user.name,email:user.email,organization:user.organization})}var accountservices=angular.module(\"crmEngine.authservices\",[]);accountservices.factory(\"Auth\",function(){var Auth=function(data){angular.extend(this,data)};return Auth.email=document.getElementById(\"userEmail\").value,Auth.checkGapiToken=function(){var timeNow=(new Date).getTime()/1e3,gapiToken=gapi.auth.getToken();if(gapiToken){var expirationTime=gapiToken.expires_at,diff=expirationTime-timeNow;if(diff>0)return!0}return!1},Auth.initWithLocalStorage=function(){var timeNow=(new Date).getTime()/1e3;if(localStorage.getItem(\"access_token\")){var access_token=localStorage.getItem(\"access_token\"),authResultexpiration=localStorage.getItem(\"authResultexpiration\"),diff=authResultexpiration-timeNow;diff>0&&\"null\"!=access_token?(Auth.$scope.immediateFailed=!1,Auth.$scope.isSignedIn=!0,2==window.countInitExec&&window.setTimeout(Auth.refreshBearer,1e3*diff),\"null\"!=access_token&&gapi.auth.setToken({access_token:access_token}),window.authResult={access_token:access_token},\"True\"==Auth.license_is_expired&&\"#/admin/users\"!=window.location.hash?window.location.replace(\"#/admin/users\"):(\"True\"==Auth.user_suspended&&\"#/admin/users\"!=window.location.hash?(Auth.suspended=!0,window.location.replace(\"#/admin/users\")):Auth.suspended=\"True\"==Auth.user_suspended&&\"#/admin/users\"==window.location.hash?!0:!1,Auth.$scope.runTheProcess())):Auth.refreshToken()}else Auth.$scope.immediateFailed=!0,Auth.$scope.apply(),gapi.signin.render(\"myGsignin\",{callback:Auth.signIn,clientid:\"935370948155-a4ib9t8oijcekj8ck6dtdcidnfof4u8q.apps.googleusercontent.com\",scope:\"https://www.googleapis.com/auth/plus.login https://www.googleapis.com/auth/plus.profile.emails.read\",theme:\"dark\",cookiepolicy:\"single_host_origin\",accesstype:\"online\",width:\"wide\"})},Auth.goAhead=function(authResult){authResult.access_token&&(\"undefined\"!=typeof Storage&&(localStorage.is_signed_in=!0,localStorage.access_token=authResult.access_token,localStorage.authResultexpiration=authResult.expires_at),window.authResult=authResult,window.is_signed_in=!0,window.access_token=authResult.access_token,window.authResultexpiration=authResult.expires_at,window.setTimeout(Auth.refreshBearer,1e3*authResult.expires_in),\"True\"==Auth.license_is_expired&&\"#/admin/users\"!=window.location.hash?window.location.replace(\"#/admin/users\"):(\"True\"==Auth.user_suspended&&\"#/admin/users\"!=window.location.hash?(Auth.suspended=!0,window.location.replace(\"#/admin/users\")):Auth.suspended=\"True\"==Auth.user_suspended&&\"#/admin/users\"==window.location.hash?!0:!1,Auth.$scope.runTheProcess()))},Auth.initSimple=function(){var timeNow=(new Date).getTime()/1e3;if(window.is_signed_in){var diff=window.authResultexpiration-timeNow;diff>0?(Auth.$scope.immediateFailed=!1,Auth.$scope.isSignedIn=!0,\"True\"==Auth.license_is_expired&&\"#/admin/users\"!=window.location.hash?window.location.replace(\"#/admin/users\"):(\"True\"==Auth.user_suspended&&\"#/admin/users\"!=window.location.hash?(Auth.suspended=!0,window.location.replace(\"#/admin/users\")):Auth.suspended=\"True\"==Auth.user_suspended&&\"#/admin/users\"==window.location.hash?!0:!1,Auth.$scope.runTheProcess())):Auth.refreshToken()}else{var isGapiOk=Auth.checkGapiToken();if(isGapiOk){var gapiToken=gapi.auth.getToken();Auth.processAuth(gapiToken)}else gapi.signin.render(\"myGsignin\",{callback:Auth.signIn,clientid:\"935370948155-a4ib9t8oijcekj8ck6dtdcidnfof4u8q.apps.googleusercontent.com\",scope:\"https://www.googleapis.com/auth/userinfo.email\",theme:\"dark\",cookiepolicy:\"single_host_origin\",accesstype:\"online\",width:\"wide\"})}},Auth.init=function($scope){if(window.countInitExec){window.countInitExec=window.countInitExec+1;{(new Date).getTime()/1e3}Auth.$scope=$scope,Auth.license_is_expired=document.getElementById(\"license_is_expired\").value,Auth.user_suspended=document.getElementById(\"user_suspended\").value,\"undefined\"!=typeof Storage?Auth.initWithLocalStorage():Auth.initSimple()}else window.countInitExec=1},Auth.signIn=function(authResult){localStorage.removeItem(\"access_token\"),authResult.status.google_logged_in?(gapi.auth.setToken(authResult),Auth.processAuth(authResult)):window.location.replace(\"/sign-in\")},Auth.processAuth=function(authResult){window.isRefreshing=!1,authResult?authResult.access_token?(Auth.$scope.immediateFailed=!1,Auth.$scope.isSignedIn=!0,Auth.goAhead(authResult)):window.location.replace(\"/sign-in\"):Auth.renderForcedSignIn()},Auth.renderForcedSignIn=function(){window.authResult=null,Auth.$scope.immediateFailed=!0,gapi.signin.render(\"myGsignin\",{callback:Auth.signIn,clientid:\"935370948155-a4ib9t8oijcekj8ck6dtdcidnfof4u8q.apps.googleusercontent.com\",scope:\"https://www.googleapis.com/auth/userinfo.email\",theme:\"dark\",cookiepolicy:\"single_host_origin\",accesstype:\"online\",width:\"wide\"})},Auth.refreshBearer=function(){var options={client_id:\"935370948155-a4ib9t8oijcekj8ck6dtdcidnfof4u8q.apps.googleusercontent.com\",scope:\"https://www.googleapis.com/auth/plus.login https://www.googleapis.com/auth/plus.profile.emails.read\",immediate:!0};gapi.auth.authorize(options,Auth.signIn)},Auth.refreshToken=function(){window.isRefreshing||(Auth.$scope.apply(),window.isRefreshing=!0,Auth.renderForcedSignIn())},Auth});var contactservices=angular.module(\"crmEngine.infonodeservices\",[]);accountservices.factory(\"InfoNode\",function(){var InfoNode=function(data){angular.extend(this,data)};return InfoNode.list=function($scope,params){console.log(\"params\"),console.log(params),gapi.client.crmengine.infonode.list(params).execute(function(resp){if(console.log(\"params\"),console.log(params),resp.code)console.log(\"test3333\"),\"Invalid token\"==resp.message&&($scope.refreshToken(),$scope.isLoading=!1,$scope.$apply());else{var renderMap=!1;if($scope.infonodes=[],void 0!=resp.items){console.log(\"test1111\"),console.log(resp.items);for(var i=0;i<resp.items.length;i++){\"addresses\"==resp.items[i].kind&&(renderMap=!0),console.log(\"resp.items[i].items\"),console.log(resp.items[i].items),$scope.infonodes[resp.items[i].kind]=resp.items[i].items;for(var j=0;j<$scope.infonodes[resp.items[i].kind].length;j++)for(var v=0;v<$scope.infonodes[resp.items[i].kind][j].fields.length;v++)$scope.infonodes[resp.items[i].kind][j][$scope.infonodes[resp.items[i].kind][j].fields[v].field]=$scope.infonodes[resp.items[i].kind][j].fields[v].value}}else console.log(\"test2222\"),$scope.infonodes[params.connections]=[];$scope.isLoading=!1,$scope.$apply(),$scope.responseCustomFields(),console.log($scope.infonodes.customfields)}$scope.$apply()})},InfoNode.insertCustom=function($scope,params,customfield){$scope.inProcess(!0),gapi.client.request({root:ROOT,path:\"/crmengine/v1/infonode/insert\",method:\"POST\",body:params,callback:function(resp){resp.code?($scope.relatedInfonode=null,\"Invalid grant\"==resp.message&&($scope.refreshToken(),$scope.isLoading=!1,$scope.$apply())):(customfield.infonode_key=resp.entityKey,$scope.inProcess(!1),$scope.apply())}})},InfoNode.deleteCustom=function($scope,params){$scope.isLoading=!0,gapi.client.crmengine.infonode[\"delete\"](params).execute(function(resp){resp.code?\"Invalid grant\"==resp.message&&($scope.refreshToken(),$scope.isLoading=!1,$scope.$apply()):($scope.isLoading=!1,$scope.customfieldDeleted(params.entityKey),$scope.$apply())})},InfoNode.insert=function($scope,params){console.log(\"params in infonodes service\"),console.log(params),$scope.inProcess(!0),gapi.client.request({root:ROOT,path:\"/crmengine/v1/infonode/insert\",method:\"POST\",body:params,callback:function(resp){if(console.log(\"insert resp\"),console.log(resp),resp.code)console.log(resp.message),$scope.relatedInfonode=null,$(\"#errorModal\").modal(\"show\"),\"Invalid grant\"==resp.message&&($scope.refreshToken(),$scope.isLoading=!1,$scope.$apply());else{var tw=new RegExp(\"twitter\"),isTwitter=tw.test(resp.fields[0].value),linked=new RegExp(\"linkedin\"),isLinkedin=linked.test(resp.fields[0].value);isTwitter&&$scope.twProfile&&($scope.twProfile.entityKey=resp.entityKey),isLinkedin&&$scope.inProfile&&($scope.inProfile.entityKey=resp.entityKey),$scope.inProcess(!1),$scope.apply(),$scope.listInfonodes(params.kind)}}})},InfoNode.patch=function($scope,params){$scope.isLoading=!0,gapi.client.request({root:ROOT,path:\"/crmengine/v1/infonode/patch\",method:\"POST\",body:params,callback:function(resp){resp.code?(console.log(resp.message),$(\"#errorModal\").modal(\"show\"),\"Invalid grant\"==resp.message&&($scope.refreshToken(),$scope.isLoading=!1,$scope.$apply())):($scope.isLoading=!1,$scope.listInfonodes(params.kind))}}),$scope.isLoading=!1},InfoNode[\"delete\"]=function($scope,params){$scope.isLoading=!0,gapi.client.crmengine.infonode[\"delete\"](params).execute(function(resp){resp.code?\"Invalid grant\"==resp.message&&($scope.refreshToken(),$scope.isLoading=!1,$scope.$apply()):($scope.isLoading=!1,$scope.listInfonodes(params.kind),console.log($scope.infonodes.customfields),$scope.$apply())})},InfoNode});var mapservices=angular.module(\"mapServices\",[]);mapservices.factory(\"Map\",function(){var Map=function(data){angular.extend(this,data)},mapCanvas={},infowindow=new google.maps.InfoWindow;return Map.render=function($scope){var mapOptions={center:new google.maps.LatLng(0,0),zoom:1};$(\"#gmap_canvas\").gmap(mapOptions).bind(\"init\",function(event,map){if($scope.infonodes.addresses)for(var i=0;i<$scope.infonodes.addresses.length;i++)if($scope.infonodes.addresses[i].lat){var lat=parseFloat($scope.infonodes.addresses[i].lat),lon=parseFloat($scope.infonodes.addresses[i].lon);$(\"#gmap_canvas\").gmap(\"addMarker\",{position:lat+\",\"+lon,draggable:!0,bounds:!0,address:$scope.infonodes.addresses[i]},function(){}).dragend(function(event){Map.updateLocation($scope,event.latLng,this)})}x=map.getZoom(),c=map.getCenter(),google.maps.event.trigger(map,\"resize\"),map.setZoom(x),map.setCenter(c)})},Map.renderEvent=function($scope){var mapOptions={center:new google.maps.LatLng(0,0),zoom:1};$(\"#gmap_canvas\").gmap(mapOptions).bind(\"init\",function(event,map){if($scope.addresses)for(var i=0;i<$scope.addresses.length;i++)if($scope.addresses[i].lat){var lat=parseFloat($scope.addresses[i].lat),lon=parseFloat($scope.addresses[i].lon);$(\"#gmap_canvas\").gmap(\"addMarker\",{position:lat+\",\"+lon,draggable:!0,bounds:!0,address:$scope.addresses[i]},function(){}).dragend(function(event){Map.updateLocation($scope,event.latLng,this)})}x=map.getZoom(),c=map.getCenter(),google.maps.event.trigger(map,\"resize\"),map.setZoom(x),map.setCenter(c)})},Map.renderwith=function($scope){var mapOptions={center:new google.maps.LatLng(0,0),zoom:1};if(mapCanvas=new google.maps.Map(document.getElementById(\"gmap_canvas\"),mapOptions),console.log(\"render from map service\"),console.log($scope.infonodes.addresses),$scope.infonodes.addresses){console.log(\"in addresses array\"),console.log($scope.infonodes.addresses);for(var i=0;i<$scope.infonodes.addresses.length;i++)if($scope.infonodes.addresses[i].lat){var loca=$scope.infonodes.addresses[i],lat=parseFloat(loca.lat),lng=parseFloat(loca.lon);lng||(console.log(\"loca.lng\"),console.log(loca.lng),lng=parseFloat(loca.lng)),console.log(\"lng\"),console.log(lng);var marker=new google.maps.Marker({map:mapCanvas,anchorPoint:new google.maps.Point(0,0)});marker.setPosition({lat:lat,lng:lng}),marker.setVisible(!0);var infowindow=new google.maps.InfoWindow({});infowindow.setContent(\"<div><strong>\"+loca.street+\", \"+loca.city+\", \"+loca.state+\", \"+loca.country+\"</strong><br>\"),google.maps.event.addListener(marker,\"click\",function(){infowindow.open(mapCanvas,marker)})}}},Map.autocomplete=function($scope,inputId){console.log(\"enter\");var input=document.getElementById(inputId),autocomplete=new google.maps.places.Autocomplete(input);google.maps.event.addListener(autocomplete,\"place_changed\",function(){\"relatedaddress\"==inputId&&(console.log(\"in related addresses\"),$scope.isRelatedAddress=!0);var place=autocomplete.getPlace();if(!place.geometry)return void $scope.notFoundAddress(place,inputId);place.geometry.viewport;var add={};add.lat=place.geometry.location.lat(),add.lng=place.geometry.location.lng(),add.formatted=place.formatted_address;for(var component={},i=0;i<place.address_components.length;i++)component=place.address_components[i],\"country\"==component.types[0]?add.country=component.long_name:\"administrative_area_level_1\"==component.types[0]?add.state=component.long_name:\"locality\"==component.types[0]?add.city=component.long_name:(\"neighborhood\"==component.types[0]||\"route\"==component.types[0])&&(add.street=component.long_name);input.value=\"\",$scope.addGeo(add)})},Map.autocompleteCalendar=function($scope,inputId){console.log(\"enter\");var input=document.getElementById(inputId),autocomplete=new google.maps.places.Autocomplete(input);google.maps.event.addListener(autocomplete,\"place_changed\",function(){\"relatedaddress\"==inputId&&(console.log(\"in related addresses\"),$scope.isRelatedAddress=!0);var place=autocomplete.getPlace();if(!place.geometry)return void $scope.notFoundAddress(place,inputId);place.geometry.viewport;var add={};add.lat=place.geometry.location.lat(),add.lng=place.geometry.location.lng(),add.formatted=place.formatted_address;for(var component={},i=0;i<place.address_components.length;i++)component=place.address_components[i],\"country\"==component.types[0]?add.country=component.long_name:\"administrative_area_level_1\"==component.types[0]?add.state=component.long_name:\"locality\"==component.types[0]?add.city=component.long_name:(\"neighborhood\"==component.types[0]||\"route\"==component.types[0])&&(add.street=component.long_name);$scope.addGeoCalendar(add)})},Map.setLocation=function($scope,address){console.log(\"work\");var marker=new google.maps.Marker({map:mapCanvas,anchorPoint:new google.maps.Point(0,0)}),lat=parseFloat(address.lat),lon=parseFloat(address.lon);marker.setPosition({lat:lat,lng:lon}),marker.setVisible(!0),infowindow.setContent(\"<div><strong>\"+address.street+\", \"+address.city+\", \"+address.state+\", \"+address.country+\"</strong><br>\"+address),infowindow.open(mapCanvas,marker)},Map.justAutocomplete=function($scope,inputId,addresstosave){var input=document.getElementById(inputId),autocomplete=new google.maps.places.Autocomplete(input);google.maps.event.addListener(autocomplete,\"place_changed\",function(){var place=autocomplete.getPlace();if(!place.geometry)return void $scope.notFoundAddress(place,inputId);place.geometry.viewport,console.log(\"place\"),console.log(place);var add={};add.lat=place.geometry.location.lat(),add.lng=place.geometry.location.lng();for(var component={},i=0;i<place.address_components.length;i++)component=place.address_components[i],\"country\"==component.types[0]?add.country=component.long_name:\"administrative_area_level_1\"==component.types[0]?add.state=component.long_name:\"locality\"==component.types[0]?add.city=component.long_name:(\"neighborhood\"==component.types[0]||\"route\"==component.types[0])&&(add.street=component.long_name);addresstosave instanceof Array?(addresstosave.push(add),console.log(\"hereee array\")):(addresstosave=add,console.log(\"hereee object\"),console.log(addresstosave),console.log($scope.currentContact.address)),input.value=\"\"})},Map.updateLocation=function($scope,location,marker){marker.address.lat=location.lat(),marker.address.lon=location.lng(),$scope.locationUpdated(marker.address)},Map.emptyString=function(entry,isLast){return void 0==entry&&(entry=\" \"),(isLast=!1)&&(entry+=\",\"),entry},Map.destroy=function(){console.log(\"mappppppppppppp\"),$(\"#gmap_canvas\").gmap(\"destroy\")},Map.searchLocation=function($scope,address){if(address.street||address.city||address.country)var addressToSearch=Map.emptyString(address.street,!1)+Map.emptyString(address.city,!1)+Map.emptyString(address.country,!1);else var addressToSearch=address;$(\"#gmap_canvas\").gmap(\"search\",{address:addressToSearch},function(results,status){if(\"OK\"==status){console.log(\"okkkkkkkkkkkkkkkkkss\"),address.lat=results[0].geometry.location.lat(),address.lon=results[0].geometry.location.lng();var position=results[0].geometry.location.lat()+\",\"+results[0].geometry.location.lng();$(\"#gmap_canvas\").gmap(\"addMarker\",{position:position,bounds:!0,draggable:!0,address:address}).dragend(function(event){console.log(\"uppppppppppppp\"),Map.updateLocation($scope,event.latLng,this)}),$scope.addGeo(address)}else $scope.addGeo(address)})},Map}),accountservices=angular.module(\"crmEngine.accountservices\",[]),accountservices.factory(\"Conf\",function($location){function getRootUrl(){var rootUrl=$location.protocol()+\"://\"+$location.host();return $location.port()&&(rootUrl+=\":\"+$location.port()),rootUrl}return{clientId:\"935370948155-a4ib9t8oijcekj8ck6dtdcidnfof4u8q.apps.googleusercontent.com\",apiBase:\"/api/\",rootUrl:getRootUrl(),scopes:\"https://www.googleapis.com/auth/plus.login https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/drive https://www.googleapis.com/auth/calendar\",requestvisibleactions:\"http://schemas.google.com/AddActivity http://schemas.google.com/ReviewActivity\",cookiepolicy:\"single_host_origin\",accounts:\"/#/accounts/show/\",contacts:\"#/contacts/show/\",leads:\"/#/leads/show/\",opportunities:\"/#/opportunities/show/\",cases:\"/#/cases/show/\",shows:\"/#/shows/show/\"}}),accountservices.factory(\"Account\",function(){var Account=function(data){angular.extend(this,data)};return Account.get=function($scope,params){$scope.inProcess(!0,\"start of accounts get\"),gapi.client.crmengine.accounts.getv2(params).execute(function(resp){if(resp.code)alert(resp.message),401==resp.code&&$scope.refreshToken(),$scope.inProcess(!1),$scope.apply();else{if($scope.account=resp,$scope.getColaborators($scope.account.entityKey),resp.contacts){if(resp.contacts.items||($scope.blankStatecontact=!0),params.contacts.pageToken?angular.forEach(resp.contacts.items,function(item){item.sociallinks=[],void 0==item.infonodes&&(item.infonodes={},item.infonodes.items=[]),angular.forEach(item.infonodes.items,function(infonode){\"sociallinks\"==infonode.kind&&angular.forEach(infonode.items,function(link){\"sociallinks\"==link.kind&&($scope.linkedinUrl(link.fields[0].value)?item.sociallinks.unshift({url:link.fields[0].value}):item.sociallinks.push({url:link.fields[0].value}))})}),console.log(\"item contact\"),console.log(item),$scope.contacts.push(item)}):(angular.forEach(resp.contacts.items,function(item){item.sociallinks=[],void 0==item.infonodes&&(item.infonodes={},item.infonodes.items=[]),angular.forEach(item.infonodes.items,function(infonode){\"sociallinks\"==infonode.kind&&angular.forEach(infonode.items,function(link){\"sociallinks\"==link.kind&&($scope.linkedinUrl(link.fields[0].value)?item.sociallinks.unshift({url:link.fields[0].value}):item.sociallinks.push({url:link.fields[0].value}))})}),console.log(\"item contact\"),console.log(item)}),$scope.contacts=resp.contacts.items),$scope.contactpagination.prev=$scope.contactCurrentPage>1?!0:!1,resp.contacts.nextPageToken){var nextPage=$scope.contactCurrentPage+1;$scope.contactpages[nextPage]=resp.contacts.nextPageToken,$scope.contactpagination.next=!0}else $scope.contactpagination.next=!1;$(\"#contactCardsContainer\").trigger(\"resize\"),setTimeout(function(){var myDiv=$(\".autoresizeName\");myDiv.length&&myDiv.css({height:\"initial\",maxHeight:\"33px\"})},100)}$scope.imageSrc=resp.logo_img_id?\"https://docs.google.com/uc?id=\"+resp.logo_img_id:resp.logo_img_url?resp.logo_img_url:\"/static/img/default_company.png\";var renderMap=!1;if(resp.infonodes){if(resp.infonodes.items)for(var i=0;i<resp.infonodes.items.length;i++){\"addresses\"==resp.infonodes.items[i].kind&&(renderMap=!0),$scope.infonodes[resp.infonodes.items[i].kind]=resp.infonodes.items[i].items?resp.infonodes.items[i].items:[];for(var j=0;j<$scope.infonodes[resp.infonodes.items[i].kind].length;j++){$scope.infonodes[resp.infonodes.items[i].kind][j].fields||($scope.infonodes[resp.infonodes.items[i].kind][j].fields=[]);for(var v=0;v<$scope.infonodes[resp.infonodes.items[i].kind][j].fields.length;v++)$scope.infonodes[resp.infonodes.items[i].kind][j][$scope.infonodes[resp.infonodes.items[i].kind][j].fields[v].field]=$scope.infonodes[resp.infonodes.items[i].kind][j].fields[v].value,$scope.infonodes[resp.infonodes.items[i].kind][j].entityKey=$scope.infonodes[resp.infonodes.items[i].kind][j].entityKey}}console.log(\"here infonodes *****************************\"),console.log($scope.infonodes)}if($scope.getCustomFields(\"accounts\"),resp.topics)if(params.topics.pageToken?angular.forEach(resp.topics.items,function(item){$scope.topics.push(item)}):$scope.topics=resp.topics.items,$scope.topicpagination.prev=$scope.topicCurrentPage>1?!0:!1,resp.topics.nextPageToken){var nextPage=$scope.topicCurrentPage+1;$scope.topicpages[nextPage]=resp.topics.nextPageToken,$scope.topicpagination.next=!0}else $scope.topicpagination.next=!1;if(resp.needs)if(resp.needs.items||($scope.blankStateneeds=!0),$scope.needs=resp.needs.items,$scope.needspagination.prev=$scope.needsCurrentPage>1?!0:!1,resp.needs.nextPageToken){var nextPage=$scope.needsCurrentPage+1;$scope.needspages[nextPage]=resp.needs.nextPageToken,$scope.needspagination.next=!0}else $scope.needspagination.next=!1;if(resp.opportunities)if(resp.opportunities.items||($scope.blankStateopportunity=!0),params.opportunities.pageToken?angular.forEach(resp.opportunities.items,function(item){$scope.opportunities.push(item)}):$scope.opportunities=resp.opportunities.items,$scope.opppagination.prev=$scope.oppCurrentPage>1?!0:!1,resp.opportunities.nextPageToken){var nextPage=$scope.oppCurrentPage+1;$scope.opppages[nextPage]=resp.opportunities.nextPageToken,$scope.opppagination.next=!0}else $scope.opppagination.next=!1;else $scope.blankStateopportunity=!0;if(resp.cases)if(resp.cases.items||($scope.blankStatecase=!0),params.cases.pageToken?angular.forEach(resp.cases.items,function(item){$scope.cases.push(item)}):$scope.cases=resp.cases.items,$scope.casepagination.prev=$scope.caseCurrentPage>1?!0:!1,resp.cases.nextPageToken){var nextPage=$scope.caseCurrentPage+1;$scope.casepages[nextPage]=resp.cases.nextPageToken,$scope.casepagination.next=!0}else $scope.casepagination.next=!1;if(resp.documents)if(resp.documents.items||($scope.blankStatdocuments=!0),params.documents.pageToken?angular.forEach(resp.documents.items,function(item){$scope.documents.push(item)}):$scope.documents=resp.documents.items,$scope.documentpagination.prev=$scope.documentCurrentPage>1?!0:!1,resp.documents.nextPageToken){var nextPage=$scope.documentCurrentPage+1;$scope.documentpages[nextPage]=resp.documents.nextPageToken,$scope.documentpagination.next=!0}else $scope.documentpagination.next=!1;else $scope.blankStatdocuments=!0;$scope.tasks=resp.tasks?resp.tasks.items:[],$scope.events=resp.events?resp.events.items:[],$scope.isContentLoaded=!0,$scope.email.to=\"\",document.title=\"Account: \"+$scope.account.name,angular.forEach($scope.infonodes.emails,function(value){$scope.email.to=$scope.email.to+value.email+\",\"}),resp.topics&&!params.topics.pageToken&&$scope.hilightTopic(),$scope.mapAutocomplete(),$scope.getLinkedinProfile(),$scope.getTwitterProfile(),console.log(\"    twitter trigger\"),$scope.inProcess(!1),$scope.apply()}})},Account[\"import\"]=function($scope,params){trackMixpanelAction(\"ACCOUNT_IMPORT\"),$scope.inProcess(!0),$scope.apply(),gapi.client.crmengine.accounts[\"import\"](params).execute(function(resp){console.log(params),console.log(resp),resp.code?($(\"#errorModal\").modal(\"show\"),401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply())):($scope.isContentLoaded=!0,$scope.numberOfRecords=resp.number_of_records,$scope.mappingColumns=resp.items,$scope.job_id=resp.job_id,$scope.doTheMapping(resp),$scope.inProcess(!1),$scope.apply())})},Account.importSecondStep=function($scope,params){$scope.inProcess(!0),$scope.apply(),gapi.client.crmengine.accounts.import_from_csv_second_step(params).execute(function(resp){console.log(params),console.log(resp),resp.code?($(\"#errorModal\").modal(\"show\"),401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply())):(console.log(resp),$scope.showImportMessages(),$scope.inProcess(!1),$scope.apply())})},Account.patch=function($scope,params){trackMixpanelAction(\"ACCOUNT_PATCH\"),$scope.inProcess(!0),gapi.client.crmengine.accounts.patch(params).execute(function(resp){if(resp.code)alert(\"Error, response is: \"+angular.toJson(resp)),$scope.inProcess(!1),$scope.apply();else{for(var k in params)\"id\"!=k&&\"entityKey\"!=k&&($scope.account[k]=resp[k]);$scope.email.to=\"\",angular.forEach($scope.account.emails,function(value){$scope.email.to=$scope.email.to+value.email+\",\"}),$scope.inProcess(!1),$scope.apply()}$scope.getColaborators()})},Account.list=function($scope,params){var callback=function(resp){if(resp.code)401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1,\"acccount list end\"),$scope.apply());else{if(resp.items?(console.log(\"resp.items https://media.licdn.com/media/p/4/005/046/1d8/27c5000.png\"),console.log(resp.items),$scope.blankStateaccount=!1,$scope.filterNoResult=!1):$scope.isFiltering?($scope.filterNoResult=!0,$scope.blankStateaccount=!1):($scope.blankStateaccount=!0,$scope.filterNoResult=!1),$scope.accounts=resp.items,$scope.pagination.prev=$scope.currentPage>1?!0:!1,resp.nextPageToken){var nextPage=$scope.currentPage+1;$scope.pages[nextPage]=resp.nextPageToken,$scope.pagination.next=!0}else $scope.pagination.next=!1;$scope.inProcess(!1,\"acccount list end\"),$scope.apply(),$(\"#accountCardsContainer\").trigger(\"resize\"),setTimeout(function(){var myDiv=$(\".autoresizeName\");myDiv.length&&myDiv.css({height:\"initial\",maxHeight:\"33px\"})},100)}};if(params.tags||params.owner||\"-updated_at\"!=params.order)var updateCache=callback;else{var updateCache=function(resp){iogrow.ioStorageCache.renderIfUpdated(\"accounts\",resp,callback)},resp=iogrow.ioStorageCache.read(\"accounts\");callback(resp)}$scope.inProcess(!0,\"acccount list\"),$scope.apply(),gapi.client.crmengine.accounts.listv2(params).execute(updateCache)},Account[\"export\"]=function($scope,params){trackMixpanelAction(\"ACCOUNT_EXPORT\"),$scope.isExporting=!0,gapi.client.crmengine.accounts[\"export\"](params).execute(function(resp){resp.code||console.log(\"request ssent\")})},Account.export_key=function($scope,params){$scope.isExporting=!0,gapi.client.crmengine.accounts.export_keys(params).execute(function(resp){resp.code||console.log(\"request ssent\")})},Account.listMore=function($scope,params){$scope.isMoreItemLoading=!0,$(window).trigger(\"resize\"),$scope.apply(),gapi.client.crmengine.accounts.listv2(params).execute(function(resp){if(resp.code)401==resp.code&&($scope.refreshToken(),$scope.isMoreItemLoading=!1,$scope.apply());else{if(angular.forEach(resp.items,function(item){$scope.accounts.push(item)}),$scope.pagination.prev=$scope.currentPage>1?!0:!1,resp.nextPageToken){var nextPage=$scope.currentPage+1;$scope.pages[nextPage]=resp.nextPageToken,$scope.pagination.next=!0}else $scope.pagination.next=!1;$scope.isMoreItemLoading=!1,$scope.apply(),$(\"#accountCardsContainer\").trigger(\"resize\"),setTimeout(function(){var myDiv=$(\".autoresizeName\");myDiv.length&&myDiv.css({height:\"initial\",maxHeight:\"33px\"})},100)}}),$scope.isMoreItemLoading=!1},Account.search=function($scope,params){gapi.client.crmengine.accounts.search(params).execute(function(resp){resp.items&&(console.log(\"resp.items from account search\"),console.log(resp.items),$scope.accountsResults=resp.items,$scope.apply())})},Account.searcha=function($scope,params){return gapi.client.crmengine.accounts.search(params).then(function(resp){return console.log(resp.result.items),resp.result.items})},Account.searchb=function(params,callback){gapi.client.crmengine.accounts.search(params).execute(function(resp){callback(resp)})},Account.insert=function($scope,params){trackMixpanelAction(\"ACCOUNT_INSERT\"),$scope.inProcess(!0),gapi.client.crmengine.accounts.insert(params).execute(function(resp){resp.code?($(\"#addAccountModal\").modal(\"hide\"),$(\"#errorModal\").modal(\"show\"),$scope.inProcess(!1),$scope.apply(),401==resp.code&&($scope.refreshToken(),$scope.apply())):($scope.accountInserted(resp),$scope.inProcess(!1),$scope.apply())})},Account[\"delete\"]=function($scope,params){trackMixpanelAction(\"ACCOUNT_DELETE\"),$scope.inProcess(!0),gapi.client.crmengine.accounts[\"delete\"](params).execute(function(){$scope.inProcess(!1),$scope.apply(),$scope.show?$scope.accountDeleted(params.entityKey):window.location.replace(\"#/accounts\")})},Account.getCompanyDetails=function($scope,params){$scope.inProcess(!0),gapi.client.crmengine.people.getCompanyLinkedin(params).execute(function(resp){resp.code?401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply()):($scope.companydetails.name=resp.name,$scope.companydetails.followers=resp.followers,$scope.companydetails.company_size=resp.company_size,$scope.companydetails.industry=resp.industry,$scope.companydetails.headquarters=resp.headquarters,$scope.companydetails.logo=resp.logo,$scope.companydetails.specialties=resp.specialties,$scope.companydetails.summary=resp.summary,$scope.companydetails.top_image=resp.top_image,$scope.companydetails.type=resp.type,$scope.companydetails.url=resp.url,$scope.companydetails.website=resp.website,$scope.companydetails.workers=JSON.parse(resp.workers),$scope.inProcess(!1),$scope.apply())})},Account.get_twitter=function($scope,params){$scope.inProcess(!0),gapi.client.crmengine.people.gettwitter(params).execute(function(resp){resp.code?401==resp.code&&($scope.inProcess(!1),$scope.apply()):($scope.twitterProfile.id=resp.id,$scope.twitterProfile.followers_count=resp.followers_count,$scope.twitterProfile.last_tweet_text=resp.last_tweet_text,$scope.twitterProfile.last_tweet_favorite_count=resp.last_tweet_favorite_count,$scope.twitterProfile.last_tweet_retweeted=resp.last_tweet_retweeted,$scope.twitterProfile.last_tweet_retweet_count=resp.last_tweet_retweet_count,$scope.twitterProfile.language=resp.language,$scope.twitterProfile.created_at=resp.created_at,$scope.twitterProfile.nbr_tweets=resp.nbr_tweets,$scope.twitterProfile.description_of_user=resp.description_of_user,$scope.twitterProfile.friends_count=resp.friends_count,$scope.twitterProfile.name=resp.name,$scope.twitterProfile.screen_name=resp.screen_name,$scope.twitterProfile.url_of_user_their_company=resp.url_of_user_their_company,$scope.twitterProfile.location=resp.location,$scope.twitterProfile.profile_image_url_https=resp.profile_image_url_https,$scope.twitterProfile.lang=resp.lang,$scope.twitterProfile.profile_banner_url=resp.profile_banner_url,$scope.inProcess(!1),$scope.apply())})},Account}),accountservices.factory(\"Search\",function(){var Search=function(data){angular.extend(this,data)};return Search.getUrl=function(type,id){var base_url=void 0;switch(type){case\"Account\":base_url=\"/#/accounts/show/\";break;case\"Contact\":base_url=\"/#/contacts/show/\";break;case\"Lead\":base_url=\"/#/leads/show/\";break;case\"Opportunity\":base_url=\"/#/opportunities/show/\";break;case\"Case\":base_url=\"/#/cases/show/\";break;case\"Show\":base_url=\"/#/live/shows/show/\";break;case\"Product_Video\":base_url=\"/#/live/product_videos/product_video/\";break;case\"Customer_Story\":base_url=\"/#/live/customer_stories/customer_story/\";break;case\"Need\":base_url=\"/#/needs/show/\";break;case\"Document\":base_url=\"#/documents/show/\";break;case\"Task\":base_url=\"#/tasks/show/\";break;case\"Event\":base_url=\"#/events/show/\"}return base_url+id},Search.getParentUrl=function(parent_kind,parent_id){var base_url=void 0;switch(parent_kind){case\"Note\":base_url=\"/#/notes/show/\";break;case\"Document\":base_url=\"#/documents/show/\";break;case\"Task\":base_url=\"#/tasks/show/\";break;case\"Event\":base_url=\"#/events/show/\"}return base_url+parent_id},Search.list=function($scope,params){\n    2  console.log(\"aqlihe dhagui----------------------------\"),$scope.inProcess(!0),void 0!=params.q&&gapi.client.crmengine.search(params).execute(function(resp){if(resp.code)401==resp.code&&$scope.refreshToken(),$scope.inProcess(!1),$scope.apply();else{if(resp.items)if((void 0==resp.nextPageToken||1==resp.nextPageToken)&&($scope.searchResults=[]),angular.forEach(resp.items,function(item){var id=item.id,type=item.type,title=item.title,url=Search.getUrl(type,id),result={};result.id=id,result.type=type,result.title=title,result.url=url,$scope.searchResults.push(result)}),$scope.pagination.prev=$scope.currentPage>1?!0:!1,resp.nextPageToken){var nextPage=$scope.currentPage+1;$scope.pages[nextPage]=resp.nextPageToken,$scope.pagination.next=!0}else $scope.pagination.next=!1;$scope.inProcess(!1),$scope.apply()}})},Search}),accountservices.factory(\"Attachement\",function(){var Attachement=function(data){angular.extend(this,data)};return Attachement.list=function($scope,params){$scope.inProcess(!0),gapi.client.crmengine.documents.list(params).execute(function(resp){if(resp.code)401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply());else{if(resp.items||$scope.isFiltering||($scope.blankStatdocuments=!0),$scope.documents=resp.items,$scope.documentpagination.prev=$scope.documentCurrentPage>1?!0:!1,resp.nextPageToken){var nextPage=$scope.documentCurrentPage+1;$scope.documentpages[nextPage]=resp.nextPageToken,$scope.documentpagination.next=!0}else $scope.documentpagination.next=!1;$scope.inProcess(!1),$scope.apply()}})},Attachement.get=function($scope,id){$scope.inProcess(!0),gapi.client.crmengine.documents.get(id).execute(function(resp){resp.code?401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply()):($scope.attachment=resp,document.title=\"Document: \"+$scope.attachment.title,$scope.prepareUrls(),$scope.isContentLoaded=!0,$scope.entityKey=$scope.attachment.entityKey,$scope.ListComments(),$scope.inProcess(!1),$scope.apply())})},Attachement.insert=function($scope,params){$scope.inProcess(!0),$(\"#newDocument\").modal(\"hide\"),gapi.client.crmengine.documents.insertv2(params).execute(function(resp){resp.code?($(\"#newDocument\").modal(\"hide\"),$(\"#errorModal\").modal(\"show\"),401==resp.code&&($scope.refreshToken(),$scope.blankStatdocuments=!1),$scope.inProcess(!1),$scope.apply()):($scope.newDoc&&resp.embedLink&&(console.log(\"here executed\"),$scope.docCreated(resp.embedLink)),$scope.listDocuments(),$scope.blankStatdocuments=!1,$scope.newdocument.title=\"\",$scope.inProcess(!1),$scope.apply())})},Attachement[\"delete\"]=function($scope,entityKey){$scope.inProcess(!0),gapi.client.crmengine.documents[\"delete\"](entityKey).execute(function(resp){resp.code?401==resp.code&&($scope.refreshToken(),$scope.blankStatdocuments=!1,$scope.inProcess(!1),$scope.apply()):($scope.blankStatdocuments=!1,$scope.docInRelatedObject?$scope.docDeleted(entityKey.entityKey):window.location.replace($scope.uri),$scope.inProcess(!1),$scope.apply())})},Attachement.attachfiles=function($scope,params){$scope.inProcess(!0),gapi.client.crmengine.documents.attachfiles(params).execute(function(resp){resp.code?($(\"#errorModal\").modal(\"show\"),401==resp.code&&($scope.refreshToken(),$scope.blankStatdocuments=!1,$scope.inProcess(!1),$scope.apply())):($scope.listDocuments(),$scope.blankStatdocuments=!1,$scope.inProcess(!1),$scope.apply())})},Attachement}),accountservices.factory(\"Email\",function(){var Email=function(data){angular.extend(this,data)};return Email.send=function($scope,params){$scope.inProcess(!0),$scope.sending=!0,gapi.client.crmengine.emails.send(params).execute(function(resp){$(\"#sendingEmail\").modal(\"show\"),resp.code?($(\"#errorModal\").modal(\"show\"),401==resp.code&&(window.location.replace(\"/sign-in\"),$scope.inProcess(!1),$scope.apply())):($scope.emailSent=!0,$scope.sending=!1,$scope.emailSent(),$scope.listTopics(),$scope.email={},$scope.inProcess(!1),$scope.apply())})},Email});var contactservices=angular.module(\"crmEngine.contactservices\",[]);accountservices.factory(\"Contact\",function(){var Contact=function(data){angular.extend(this,data)};return Contact.get=function($scope,params){$scope.inProcess(!0),$scope.apply(),gapi.client.crmengine.contacts.getv2(params).execute(function(resp){if(resp.code)401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply());else{$scope.contact=resp,resp.account&&($scope.searchAccountQuery=resp.account.name);var renderMap=!1;if(resp.infonodes&&(console.log(\"infonodes\"),console.log(resp.infonodes),resp.infonodes.items)){for(var i=0;i<resp.infonodes.items.length;i++){\"addresses\"==resp.infonodes.items[i].kind&&(renderMap=!0),$scope.infonodes[resp.infonodes.items[i].kind]=resp.infonodes.items[i].items;for(var j=0;j<$scope.infonodes[resp.infonodes.items[i].kind].length;j++)for(var v=0;v<$scope.infonodes[resp.infonodes.items[i].kind][j].fields.length;v++)$scope.infonodes[resp.infonodes.items[i].kind][j][$scope.infonodes[resp.infonodes.items[i].kind][j].fields[v].field]=$scope.infonodes[resp.infonodes.items[i].kind][j].fields[v].value,$scope.infonodes[resp.infonodes.items[i].kind][j].entityKey=$scope.infonodes[resp.infonodes.items[i].kind][j].entityKey}$scope.infonodes.sociallinks&&angular.forEach($scope.infonodes.sociallinks,function(sociallink){$scope.linkedinUrl(sociallink.url)&&($scope.infonodes.sociallinks.splice($scope.infonodes.sociallinks.indexOf(sociallink),1),$scope.infonodes.sociallinks.unshift(sociallink))})}if($scope.getCustomFields(\"contacts\"),console.log(\"cus cus\"),resp.topics)if(params.topics.pageToken?angular.forEach(resp.topics.items,function(item){$scope.topics.push(item)}):$scope.topics=resp.topics.items,$scope.topicCurrentPage>1?(console.log(\"Should show PREV\"),$scope.topicpagination.prev=!0):$scope.topicpagination.prev=!1,resp.topics.nextPageToken){var nextPage=$scope.topicCurrentPage+1;$scope.topicpages[nextPage]=resp.topics.nextPageToken,$scope.topicpagination.next=!0}else $scope.topicpagination.next=!1;if(resp.opportunities)if(resp.opportunities.items||($scope.blankStateopportunity=!0),params.opportunities.pageToken?angular.forEach(resp.opportunities.items,function(item){$scope.opportunities.push(item)}):$scope.opportunities=resp.opportunities.items,$scope.opppagination.prev=$scope.oppCurrentPage>1?!0:!1,resp.opportunities.nextPageToken){var nextPage=$scope.oppCurrentPage+1;$scope.opppages[nextPage]=resp.opportunities.nextPageToken,$scope.opppagination.next=!0}else $scope.opppagination.next=!1;if(resp.cases)if(resp.cases.items||($scope.blankStatecase=!0),params.cases.pageToken?angular.forEach(resp.cases.items,function(item){$scope.cases.push(item)}):$scope.cases=resp.cases.items,$scope.casepagination.prev=$scope.caseCurrentPage>1?!0:!1,resp.cases.nextPageToken){var nextPage=$scope.caseCurrentPage+1;$scope.casepages[nextPage]=resp.cases.nextPageToken,$scope.casepagination.next=!0}else $scope.casepagination.next=!1;if(resp.documents)if(resp.documents.items||($scope.blankStatdocuments=!0),params.documents.pageToken?angular.forEach(resp.documents.items,function(item){$scope.documents.push(item)}):$scope.documents=resp.documents.items,$scope.documentpagination.prev=$scope.documentCurrentPage>1?!0:!1,resp.documents.nextPageToken){var nextPage=$scope.documentCurrentPage+1;$scope.documentpages[nextPage]=resp.documents.nextPageToken,$scope.documentpagination.next=!0}else $scope.documentpagination.next=!1;else $scope.blankStatdocuments=!0;$scope.tasks=resp.tasks?resp.tasks.items:[],$scope.events=resp.events?resp.events.items:[],$scope.imageSrc=resp.profile_img_url?resp.profile_img_url:\"/static/img/avatar_contact.jpg\",$scope.isContentLoaded=!0,document.title=\"Contact: \"+$scope.contact.firstname+\" \"+$scope.contact.lastname,$scope.email.to=\"\";var invites=new Array;angular.forEach($scope.infonodes.emails,function(value){var inviteOnHangoutByEmail={id:value.email,invite_type:\"EMAIL\"};invites.push(inviteOnHangoutByEmail),$scope.email.to=$scope.email.to+value.email+\",\"}),gapi.hangout.render(\"placeholder-div1\",{render:\"createhangout\",invites:invites}),$scope.inProcess(!1),$scope.apply(),resp.topics&&!params.topics.pageToken&&$scope.hilightTopic(),$scope.getLinkedinProfile(),$scope.getTwitterProfile(),console.log(\"hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhere contact\"),console.log($scope.contact)}})},Contact.patch=function($scope,params){trackMixpanelAction(\"CONTACT_PATCH\"),$scope.inProcess(!0),gapi.client.crmengine.contacts.patch(params).execute(function(resp){if(resp.code)401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply());else{for(var k in params)\"id\"!=k&&\"entityKey\"!=k&&($scope.contact[k]=resp[k]);$scope.email.to=\"\",angular.forEach($scope.contact.emails,function(value){$scope.email.to=$scope.email.to+value.email+\",\"}),$scope.inProcess(!1),$scope.apply()}$scope.getColaborators()})},Contact[\"import\"]=function($scope,params){trackMixpanelAction(\"CONTACT_IMPORT\"),$scope.inProcess(!0),$scope.apply(),gapi.client.crmengine.contacts[\"import\"](params).execute(function(resp){console.log(params),console.log(resp),resp.code?($(\"#errorModal\").modal(\"show\"),401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply())):($scope.isContentLoaded=!0,$scope.numberOfRecords=resp.number_of_records,$scope.mappingColumns=resp.items,$scope.job_id=resp.job_id,$scope.doTheMapping(resp),$scope.inProcess(!1),$scope.apply())})},Contact.importSecondStep=function($scope,params){$scope.inProcess(!0),$scope.apply(),gapi.client.crmengine.contacts.import_from_csv_second_step(params).execute(function(resp){console.log(params),console.log(resp),resp.code?($(\"#errorModal\").modal(\"show\"),401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply())):(console.log(resp),$scope.showImportMessages(),$scope.inProcess(!1),$scope.apply())})},Contact.list=function($scope,params){$scope.inProcess(!0);var callback=function(resp){if(resp.code)401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply());else{if(resp.items?($scope.blankStatecontact=!1,$scope.filterNoResult=!1):$scope.isFiltering?($scope.filterNoResult=!0,$scope.blankStatecontact=!1):($scope.blankStatecontact=!0,$scope.filterNoResult=!1),$scope.contacts=resp.items,$scope.contactpagination.prev=$scope.contactCurrentPage>1?!0:!1,resp.nextPageToken){var nextPage=$scope.contactCurrentPage+1;$scope.contactpages[nextPage]=resp.nextPageToken,$scope.contactpagination.next=!0}else $scope.contactpagination.next=!1;$scope.inProcess(!1),$scope.apply(),$(\"#contactCardsContainer\").trigger(\"resize\"),setTimeout(function(){var myDiv=$(\".autoresizeName\");myDiv.length&&myDiv.css({height:\"initial\",maxHeight:\"33px\"})},100)}};if(params.tags||params.owner||\"-updated_at\"!=params.order)var updateCache=callback;else{var updateCache=function(resp){iogrow.ioStorageCache.renderIfUpdated(\"contacts\",resp,callback)},resp=iogrow.ioStorageCache.read(\"contacts\");callback(resp)}gapi.client.crmengine.contacts.listv2(params).execute(updateCache)},Contact.search=function($scope,params){gapi.client.crmengine.contacts.search(params).execute(function(resp){resp.items&&(console.log(\"resp.items from contact search\"),console.log(resp.items),$scope.results=resp.items,$scope.apply())})},Contact.searchb=function(params,callback){gapi.client.crmengine.contacts.search(params).execute(function(resp){callback(resp)})},Contact.listMore=function($scope,params){$scope.isMoreItemLoading=!0,$(window).trigger(\"resize\"),$scope.$apply(),gapi.client.crmengine.contacts.listv2(params).execute(function(resp){if(resp.code)401==resp.code&&($scope.refreshToken(),$scope.isMoreItemLoading=!1,$scope.apply());else{if(angular.forEach(resp.items,function(item){$scope.contacts.push(item)}),$scope.contactpagination.prev=$scope.contactCurrentPage>1?!0:!1,resp.nextPageToken){var nextPage=$scope.contactCurrentPage+1;$scope.contactpages[nextPage]=resp.nextPageToken,$scope.contactpagination.next=!0}else $scope.contactpagination.next=!1;$scope.isMoreItemLoading=!1,$scope.apply(),$(\"#contactCardsContainer\").trigger(\"resize\"),setTimeout(function(){var myDiv=$(\".autoresizeName\");myDiv.length&&myDiv.css({height:\"initial\",maxHeight:\"33px\"})},100)}})},Contact.get_linkedin=function($scope,params){$scope.inProcess(!0),gapi.client.crmengine.people.getLinkedin(params).execute(function(resp){resp.code?401==resp.code&&($scope.inProcess(!1),$scope.apply()):($scope.linkedProfile.firstname=resp.firstname,$scope.linkedProfile.lastname=resp.lastname,$scope.linkedProfile.headline=resp.headline,$scope.linkedProfile.formations=resp.formations,$scope.linkedProfile.locality=resp.locality,$scope.linkedProfile.relation=resp.relation,$scope.linkedProfile.industry=resp.industry,$scope.linkedProfile.resume=resp.resume,$scope.linkedProfile.skills=resp.skills,$scope.linkedProfile.current_post=resp.current_post,$scope.linkedProfile.past_post=resp.past_post,$scope.linkedProfile.certifications=JSON.parse(resp.certifications),$scope.linkedProfile.experiences=JSON.parse(resp.experiences),$scope.inProcess(!1),$scope.apply())})},Contact.get_twitter=function($scope,params){$scope.inProcess(!0),gapi.client.crmengine.people.gettwitter(params).execute(function(resp){resp.code?401==resp.code&&($scope.inProcess(!1),$scope.apply()):($scope.twitterProfile.id=resp.id,$scope.twitterProfile.followers_count=resp.followers_count,$scope.twitterProfile.last_tweet_text=resp.last_tweet_text,$scope.twitterProfile.last_tweet_favorite_count=resp.last_tweet_favorite_count,$scope.twitterProfile.last_tweet_retweeted=resp.last_tweet_retweeted,$scope.twitterProfile.last_tweet_retweet_count=resp.last_tweet_retweet_count,$scope.twitterProfile.language=resp.language,$scope.twitterProfile.created_at=resp.created_at,$scope.twitterProfile.nbr_tweets=resp.nbr_tweets,$scope.twitterProfile.description_of_user=resp.description_of_user,$scope.twitterProfile.friends_count=resp.friends_count,$scope.twitterProfile.name=resp.name,$scope.twitterProfile.screen_name=resp.screen_name,$scope.twitterProfile.url_of_user_their_company=resp.url_of_user_their_company,$scope.twitterProfile.location=resp.location,$scope.twitterProfile.profile_image_url_https=resp.profile_image_url_https,$scope.twitterProfile.lang=resp.lang,$scope.inProcess(!1),$scope.apply())})},Contact[\"export\"]=function($scope,params){trackMixpanelAction(\"CONTACT_EXPORT\"),$scope.isExporting=!0,gapi.client.crmengine.contacts[\"export\"](params).execute(function(resp){resp.code||console.log(\"request ssent\")})},Contact.export_key=function($scope,params){$scope.isExporting=!0,gapi.client.crmengine.contacts.export_keys(params).execute(function(resp){resp.code||console.log(\"request ssent\")})},Contact.insert=function($scope,params){trackMixpanelAction(\"CONTACT_INSERT\"),$scope.inProcess(!0),gapi.client.crmengine.contacts.insertv2(params).execute(function(resp){resp.code?(console.log(resp.message),$(\"#addAContactModal\").modal(\"hide\"),$(\"#errorModal\").modal(\"show\"),\"Invalid grant\"==resp.message&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply())):(void 0==$scope.contacts&&($scope.contacts=[],$scope.blankStatecontact=!1),$scope.contacts.unshift(resp),console.log($scope.contacts),$scope.contactInserted&&$scope.contactInserted(resp),$scope.searchAccountQuery=\"\",$scope.inProcess(!1),$scope.apply())})},Contact[\"delete\"]=function($scope,params){trackMixpanelAction(\"CONTACT_DELETE\"),$scope.inProcess(!0),gapi.client.crmengine.contacts[\"delete\"](params).execute(function(resp){$scope.contactDeleted?($scope.contactDeleted(resp),$scope.inProcess(!1),$scope.apply()):($scope.inProcess(!1),$scope.apply())})},Contact.Synchronize=function($scope,params){trackMixpanelAction(\"CONTACT_SYNCHRONIZE\"),$scope.inProcess(!0),gapi.client.crmengine.contacts.synchronize(params).execute(function(resp){resp.code||($(\"#GontactModal\").modal(\"hide\"),$scope.inProcess(!0),$scope.apply(),$scope.runTheProcess())})},Contact.create=function($scope,params,force){force?Contact.insert($scope,params):Contact.filterByFirstAndLastName($scope,params,function(similarContacts){similarContacts&&similarContacts.length?($scope.similarContacts=similarContacts,$(\"#sameContactModal\").modal(\"show\"),$scope.apply()):Contact.insert($scope,params)})},Contact.filterByFirstAndLastName=function($scope,params,callback){$scope.inProcess(!0),$scope.apply(),gapi.client.request({root:ROOT,path:\"/crmengine/v1/contacts/filter\",method:\"POST\",body:params,callback:function(resp){resp.code?($(\"#addContactModal\").modal(\"hide\"),$(\"#errorModal\").modal(\"show\"),\"Invalid grant\"==resp.message&&$scope.refreshToken()):callback(resp.items),$scope.inProcess(!1),$scope.apply()}})},Contact.mergeContact=function($scope,params){$scope.isLoading=!0,$scope.apply(),gapi.client.request({root:ROOT,path:\"/crmengine/v1/contacts/merge\",method:\"POST\",body:params,callback:function(resp){$scope.isLoading=!1,$scope.apply(),resp.code||($scope.mergedContacts++,$scope.mergedContacts==$scope.similarContacts.length&&($(\"#sameContactModal\").modal(\"hide\"),$(\"body\").removeClass(\"modal-open\"),$(\".modal-backdrop\").remove(),window.location.replace(\"/#/contacts/show/\"+resp.id)))}})},Contact});var opportunityservices=angular.module(\"crmEngine.opportunityservices\",[]);opportunityservices.factory(\"Opportunity\",function(){var Opportunity=function(data){angular.extend(this,data)};return Opportunity.get=function($scope,params){$scope.inProcess(!0),gapi.client.crmengine.opportunities.getv2(params).execute(function(resp){if(resp.code)401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply());else{$scope.opportunity=resp,$scope.getColaborators();var renderMap=!1;if(resp.infonodes&&resp.infonodes.items){for(var i=0;i<resp.infonodes.items.length;i++){\"addresses\"==resp.infonodes.items[i].kind&&(renderMap=!0),$scope.infonodes[resp.infonodes.items[i].kind]=resp.infonodes.items[i].items;for(var j=0;j<$scope.infonodes[resp.infonodes.items[i].kind].length;j++)for(var v=0;v<$scope.infonodes[resp.infonodes.items[i].kind][j].fields.length;v++)$scope.infonodes[resp.infonodes.items[i].kind][j][$scope.infonodes[resp.infonodes.items[i].kind][j].fields[v].field]=$scope.infonodes[resp.infonodes.items[i].kind][j].fields[v].value,$scope.infonodes[resp.infonodes.items[i].kind][j].entityKey=$scope.infonodes[resp.infonodes.items[i].kind][j].entityKey}renderMap&&$scope.renderMaps()}if($scope.getCustomFields(\"opportunities\"),resp.topics)if(params.topics.pageToken?angular.forEach(resp.topics.items,function(item){$scope.topics.push(item)}):$scope.topics=resp.topics.items,$scope.topicpagination.prev=$scope.topicCurrentPage>1?!0:!1,resp.topics.nextPageToken){var nextPage=$scope.topicCurrentPage+1;$scope.topicpages[nextPage]=resp.topics.nextPageToken,$scope.topicpagination.next=!0}else $scope.topicpagination.next=!1;if(resp.documents)if(resp.documents.items||($scope.blankStatdocuments=!0),params.documents.pageToken?angular.forEach(resp.documents.items,function(item){$scope.documents.push(item)}):$scope.documents=resp.documents.items,$scope.documentpagination.prev=$scope.documentCurrentPage>1?!0:!1,resp.documents.nextPageToken){var nextPage=$scope.documentCurrentPage+1;$scope.documentpages[nextPage]=resp.documents.nextPageToken,$scope.documentpagination.next=!0}else $scope.documentpagination.next=!1;else $scope.blankStatdocuments=!0;$scope.tasks=resp.tasks?resp.tasks.items:[],$scope.events=resp.events?resp.events.items:[],$scope.isContentLoaded=!0,resp.current_stage&&($scope.opportunity.currentStageSelect=resp.current_stage.name+\" - ( \"+resp.current_stage.probability+\"% )\"),document.title=\"Opportunity: \"+$scope.opportunity.name,$scope.opportunity.lead&&($scope.searchLeadQuery=$scope.opportunity.lead.firstname+\" \"+$scope.opportunity.lead.lastname),$scope.opportunity.contacts&&($scope.searchContactQuery=$scope.opportunity.contacts[0].firstname),$scope.opportunity.account&&($scope.searchAccountQuery=$scope.opportunity.account.name),$scope.apply(),resp.topics&&!params.topics.pageToken&&$scope.hilightTopic(),$scope.inProcess(!1),$scope.apply(),$scope.runStagesList()}})},Opportunity.list2=function($scope,params,callback){$scope.inProcess(!0);var resp=iogrow.ioStorageCache.read(\"opportunities\");callback(resp),gapi.client.crmengine.opportunities.listv3().execute(function(resp){iogrow.ioStorageCache.renderIfUpdated(\"opportunities\",resp,callback)})},Opportunity.list=function($scope,params){$scope.inProcess(!0),gapi.client.crmengine.opportunities.listv2(params).execute(function(resp){if(resp.code)401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply());else{if(resp.items||$scope.isFiltering||($scope.blankStateopportunity=!0),$scope.opportunities=resp.items,$scope.opppagination.prev=$scope.oppCurrentPage>1?!0:!1,resp.nextPageToken){var nextPage=$scope.oppCurrentPage+1;$scope.opppages[nextPage]=resp.nextPageToken,$scope.opppagination.next=!0}else $scope.opppagination.next=!1;$scope.inProcess(!1),$scope.apply()}})},Opportunity.listMore=function($scope,params){$scope.isMoreItemLoading=!0,$(window).trigger(\"resize\"),$scope.apply(),gapi.client.crmengine.opportunities.listv2(params).execute(function(resp){if(resp.code)401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply());else{if(angular.forEach(resp.items,function(item){$scope.opportunities.push(item)}),$scope.opppagination.prev=$scope.oppCurrentPage>1?!0:!1,resp.nextPageToken){var nextPage=$scope.oppCurrentPage+1;$scope.opppages[nextPage]=resp.nextPageToken,$scope.opppagination.next=!0}else $scope.opppagination.next=!1;$scope.isMoreItemLoading=!1,$scope.inProcess(!1),$scope.apply()}})},Opportunity.search=function($scope,params){gapi.client.crmengine.opportunities.search(params).execute(function(resp){resp.items&&($scope.results=resp.items,$scope.inProcess(!1),$scope.apply())})},Opportunity.patch=function($scope,params){trackMixpanelAction(\"OPPORTUNITY_PATCH\"),$scope.inProcess(!0),gapi.client.crmengine.opportunities.patch(params).execute(function(resp){if(resp.code)401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply());else{for(var k in params)\"id\"!=k&&\"entityKey\"!=k&&($scope.opportunity[k]=resp[k]);resp.competitors&&($scope.opportunity.competitors=resp.competitors),resp.contacts&&($scope.opportunity.contacts=resp.contacts),console.log(\"resp after patch\"),console.log(resp),console.log($scope.opportunity),$scope.inProcess(!1),$scope.apply()}$scope.getColaborators()})},Opportunity.deleteTimeItem=function($scope,item){$scope.inProcess(!0);var params={entityKey:item.entityKey};gapi.client.crmengine.opportunities.timeline[\"delete\"](params).execute(function(resp){resp.code?401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply()):($scope.timeItemDeleted(item),$scope.inProcess(!1),$scope.apply())})},Opportunity.update_stage=function($scope,params){trackMixpanelAction(\"OPPORTUNITY_UPDATE_STAGE\"),gapi.client.crmengine.opportunities.update_stage(params).execute(function(resp){console.log(\"$scope.isLoading before inProcess true\"),console.log($scope.isLoading),$scope.inProcess(!0),$scope.apply(),console.log(\"$scope.isLoading after inProcess true\"),console.log($scope.isLoading),console.log(\"applying\"),resp.code?(console.log(\"error in Update Stage\"),401==resp.code&&($scope.inProcess(!1),$scope.apply())):($scope.stageUpdated(params),console.log(\"$scope.isLoading before inProcess false\"),console.log($scope.isLoading),$scope.inProcess(!1),$scope.apply(),console.log(\"$scope.isLoading after inProcess false\"),console.log($scope.isLoading))})},Opportunity.insert=function($scope,params){trackMixpanelAction(\"OPPORTUNITY_INSERT\"),$scope.inProcess(!0),gapi.client.crmengine.opportunities.insertv2(params).execute(function(resp){resp.code?($(\"#addOpportunityModal\").modal(\"hide\"),$(\"#errorModal\").modal(\"show\"),\"Invalid grant\"==resp.message&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply())):($scope.inProcess(!1),void 0==$scope.opportunities&&($scope.opportunities=[],$scope.blankStateopportunity=!1),1!=$scope.relatedOpp&&$scope.opportunityInserted&&$scope.opportunityInserted(resp),$scope.opportunities.push(resp),$scope.inProcess(!1),$scope.apply())})},Opportunity[\"delete\"]=function($scope,params){trackMixpanelAction(\"OPPORTUNITY_DELETE\"),$scope.inProcess(!0),$scope.apply(),gapi.client.crmengine.opportunities[\"delete\"](params).execute(function(){1==$scope.relatedOpp?(console.log(\"source\"),$scope.oppDeleted(params.entityKey)):params.source?(console.log(\"source\"),$scope.selectedTab=5,$scope.waterfallTrigger(),$scope.listOpportunities()):(console.log(\" non source\"),$scope.oppDeleted(params.entityKey)),$scope.inProcess(!1),$scope.apply()})},Opportunity[\"export\"]=function($scope,params){trackMixpanelAction(\"OPPORTUNITY_EXPORT\"),$scope.isExporting=!0,gapi.client.crmengine.opportunities[\"export\"](params).execute(function(resp){resp.code||console.log(\"request ssent\")})},Opportunity.export_key=function($scope,params){$scope.isExporting=!0,gapi.client.crmengine.opportunities.export_keys(params).execute(function(resp){resp.code||console.log(\"request ssent\")})},Opportunity}),opportunityservices.factory(\"OpportunityLoader\",[\"Opportunity\",\"$route\",\"$q\",function(Opportunity,$route,$q){return function(){$q.defer(),$route.current.params.opportunityId;return Opportunity.get($route.current.params.opportunityId)}}]),opportunityservices.factory(\"Email\",function(){var Email=function(data){angular.extend(this,data)};return Email.send=function($scope,params,listPage){$scope.inProcess(!0),$scope.sending=!0,gapi.client.crmengine.emails.send(params).execute(function(resp){$(\"#sendingEmail\").modal(\"show\"),resp.code?($(\"#errorModal\").modal(\"show\"),401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply())):(console.log(\"resp.code\"),console.log(resp.code),$scope.emailSent=!0,$scope.sending=!1,$scope.selectedTab=1,listPage?$scope.emailSentConfirmation():($scope.listTopics(),$scope.emailSentConfirmation()),$scope.inProcess(!1),$scope.apply())})},Email});var leadservices=angular.module(\"crmEngine.leadservices\",[]);leadservices.factory(\"Lead\",function(){var Lead=function(data){angular.extend(this,data)};return Lead.wizard=function($scope){trackMixpanelAction(\"LEAD_LAUNCH_WIZARD\"),Lead.$scope=$scope,localStorage.completedTour=\"True\";var tour={id:\"hello-hopscotch\",steps:[{title:\"Discovery\",content:\"Your customers are talking about topics related to your business on Twitter. We provide you the right tool to discover them.\",target:\"id_Discovery\",placement:\"right\"},{title:\"Leads\",content:\"Use leads to easily track interesting people. You can add notes, set reminders or send emails\",target:\"id_Leads\",placement:\"right\"},{title:\"Opportunities\",content:\"The Opportunities tab is where we go to view the deals being tracked in ioGrow.\",target:\"id_Opportunities\",placement:\"right\"},{title:\"Contacts\",content:\"All individuals associated with an Account.\",target:\"id_Contacts\",placement:\"right\"},{title:\"Accounts\",content:\"All organizations involved with your business (such as customers, competitors, and partners)\",target:\"id_Accounts\",placement:\"right\"},{title:\"Cases\",content:\"All your customers issues such as a customer’s feedback, problem, or question.\",target:\"id_Cases\",placement:\"right\"},{title:\"Tasks\",content:\"All activities or to-do items to perform or that has been performed.\",target:\"id_Tasks\",placement:\"right\"},{title:\"Calendar\",content:\"Manage your calendar and create events\",target:\"id_Calendar\",placement:\"right\"}],onEnd:function(){$scope.saveIntercomEvent(\"completed Tour\");var userId=document.getElementById(\"userId\").value;if(userId){var params={id:parseInt(userId),completed_tour:!0};User.completedTour(Lead.$scope,params)}console.log(\"dddezz\"),$(\"#installChromeExtension\").modal(\"show\")}};console.log(\"beginstr\"),hopscotch.startTour(tour)},Lead.get=function($scope,params){$scope.inProcess(!0),$scope.getColaborators(),gapi.client.request({root:ROOT,path:\"/crmengine/v1/leads/getv2\",method:\"POST\",body:params,callback:function(resp){if(resp.code)401==resp.code&&(console.log(resp),$scope.inProcess(!1),$scope.apply());else{$scope.lead=resp,$scope.isContentLoaded=!0,$scope.imageSrc=resp.profile_img_url?resp.profile_img_url:\"/static/img/avatar_contact.jpg\";var renderMap=!1;if(resp.infonodes&&resp.infonodes.items){for(var i=0;i<resp.infonodes.items.length;i++){\"addresses\"==resp.infonodes.items[i].kind&&(renderMap=!0),$scope.infonodes[resp.infonodes.items[i].kind]=resp.infonodes.items[i].items;for(var j=0;j<$scope.infonodes[resp.infonodes.items[i].kind].length;j++)for(var v=0;v<$scope.infonodes[resp.infonodes.items[i].kind][j].fields.length;v++)$scope.infonodes[resp.infonodes.items[i].kind][j][$scope.infonodes[resp.infonodes.items[i].kind][j].fields[v].field]=$scope.infonodes[resp.infonodes.items[i].kind][j].fields[v].value,$scope.infonodes[resp.infonodes.items[i].kind][j].entityKey=$scope.infonodes[resp.infonodes.items[i].kind][j].entityKey}if($scope.infonodes.sociallinks){var linkedinExist=!1;angular.forEach($scope.infonodes.sociallinks,function(sociallink){$scope.linkedinUrl(sociallink.url)?(linkedinExist=!0,$scope.infonodes.sociallinks.splice($scope.infonodes.sociallinks.indexOf(sociallink),1),$scope.infonodes.sociallinks.unshift(sociallink)):$scope.twitterUrl(sociallink.url)&&(linkedinExist?($scope.infonodes.sociallinks.splice($scope.infonodes.sociallinks.indexOf(sociallink),1),$scope.infonodes.sociallinks.splice(2,0,sociallink)):($scope.infonodes.sociallinks.splice($scope.infonodes.sociallinks.indexOf(sociallink),1),$scope.infonodes.sociallinks.unshift(sociallink)))})}}if(console.log(\"before customfield\"),console.log($scope.infonodes.customfields),$scope.getCustomFields(\"leads\"),resp.topics)if(params.topics.pageToken?angular.forEach(resp.topics.items,function(item){$scope.topics.push(item)}):$scope.topics=resp.topics.items,$scope.topicCurrentPage>1?(console.log(\"Should show PREV\"),$scope.topicpagination.prev=!0):$scope.topicpagination.prev=!1,resp.topics.nextPageToken){var nextPage=$scope.topicCurrentPage+1;$scope.topicpages[nextPage]=resp.topics.nextPageToken,$scope.topicpagination.next=!0}else $scope.topicpagination.next=!1;if(resp.documents)if(resp.documents.items||($scope.blankStatdocuments=!0),params.documents.pageToken?angular.forEach(resp.documents.items,function(item){$scope.documents.push(item)}):$scope.documents=resp.documents.items,$scope.documentpagination.prev=$scope.documentCurrentPage>1?!0:!1,resp.documents.nextPageToken){var nextPage=$scope.documentCurrentPage+1;$scope.documentpages[nextPage]=resp.documents.nextPageToken,$scope.documentpagination.next=!0}else $scope.documentpagination.next=!1;else $scope.blankStatdocuments=!0;if(resp.opportunities&&!jQuery.isEmptyObject(resp.opportunities)&&resp.opportunities.items)if(params.opportunities.pageToken?angular.forEach(resp.opportunities.items,function(item){$scope.opportunities.push(item)}):$scope.opportunities=resp.opportunities.items,$scope.opppagination.prev=$scope.oppCurrentPage>1?!0:!1,resp.opportunities.nextPageToken){var nextPage=$scope.oppCurrentPage+1;$scope.opppages[nextPage]=resp.opportunities.nextPageToken,$scope.opppagination.next=!0}else $scope.opppagination.next=!1;else $scope.blankStateopportunity=!0;$scope.tasks=resp.tasks?resp.tasks.items:[],$scope.events=resp.events?resp.events.items:[],$scope.email.to=\"\",document.title=\"Lead: \"+$scope.lead.firstname+\" \"+$scope.lead.lastname;var invites=new Array;angular.forEach($scope.infonodes.emails,function(value){var inviteOnHangoutByEmail={id:value.email,invite_type:\"EMAIL\"};invites.push(inviteOnHangoutByEmail),$scope.email.to=$scope.email.to+value.email+\",\"}),gapi.hangout.render(\"placeholder-div1\",{render:\"createhangout\",invites:invites,widget_size:72}),$scope.inProcess(!1),$scope.getLinkedinProfile(),$scope.getTwitterProfile(),$scope.apply(),resp.topics&&!params.topics.pageToken&&$scope.hilightTopic()}$scope.getColaborators()}})},Lead.disocver_check=function(){},Lead.get_linkedin=function($scope,params){$scope.inProcess(!0),gapi.client.request({root:ROOT,path:\"/crmengine/v1/people/linkedinProfile\",method:\"POST\",body:params,callback:function(resp){resp.code?401==resp.code&&($scope.inProcess(!1),$scope.apply()):($scope.linkedProfile.firstname=resp.firstname,\n    3  $scope.linkedProfile.lastname=resp.lastname,$scope.linkedProfile.headline=resp.headline,$scope.linkedProfile.formations=resp.formations,$scope.linkedProfile.locality=resp.locality,$scope.linkedProfile.relation=resp.relation,$scope.linkedProfile.industry=resp.industry,$scope.linkedProfile.resume=resp.resume,$scope.linkedProfile.skills=resp.skills,$scope.linkedProfile.current_post=resp.current_post,$scope.linkedProfile.past_post=resp.past_post,$scope.linkedProfile.certifications=JSON.parse(resp.certifications),$scope.linkedProfile.experiences=JSON.parse(resp.experiences),$scope.inProcess(!1),$scope.apply())}})},Lead.get_twitter=function($scope,params){$scope.inProcess(!0),gapi.client.request({root:ROOT,path:\"/crmengine/v1/people/twitterprofile\",method:\"POST\",body:params,callback:function(resp){resp.code?401==resp.code&&($scope.inProcess(!1),$scope.apply()):($scope.twitterProfile.id=resp.id,$scope.twitterProfile.followers_count=resp.followers_count,$scope.twitterProfile.last_tweet_text=resp.last_tweet_text,$scope.twitterProfile.last_tweet_favorite_count=resp.last_tweet_favorite_count,$scope.twitterProfile.last_tweet_retweeted=resp.last_tweet_retweeted,$scope.twitterProfile.last_tweet_retweet_count=resp.last_tweet_retweet_count,$scope.twitterProfile.language=resp.language,$scope.twitterProfile.created_at=resp.created_at,$scope.twitterProfile.nbr_tweets=resp.nbr_tweets,$scope.twitterProfile.description_of_user=resp.description_of_user,$scope.twitterProfile.friends_count=resp.friends_count,$scope.twitterProfile.name=resp.name,$scope.twitterProfile.screen_name=resp.screen_name,$scope.twitterProfile.url_of_user_their_company=resp.url_of_user_their_company,$scope.twitterProfile.location=resp.location,$scope.twitterProfile.profile_image_url_https=resp.profile_image_url_https,$scope.twitterProfile.lang=resp.lang,$scope.inProcess(!1),$scope.apply()),console.log(\"gapi #end_execute\")}})},Lead.patch=function($scope,params){trackMixpanelAction(\"LEAD_SHOW_PATCH\"),$scope.inProcess(!0),gapi.client.request({root:ROOT,path:\"/crmengine/v1/leads/patch\",method:\"POST\",body:params,callback:function(resp){if(resp)if(resp.code)401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply());else{for(var k in params)\"id\"!=k&&\"entityKey\"!=k&&($scope.lead[k]=resp[k]);$scope.email.to=\"\",angular.forEach($scope.lead.emails,function(value){$scope.email.to=$scope.email.to+value.email+\",\"}),$scope.inProcess(!1),$scope.apply()}$scope.getColaborators(),console.log(resp)}})},Lead.filterByTags=function($scope,params){trackMixpanelAction(\"LEAD_LIST_FILTERBYTAGS\"),$scope.isMoreItemLoading=!0,$scope.inProcess(!0);var callback=function(resp){if(resp.code)401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply());else{if(resp.items?$scope.blankStatelead=!1:$scope.isFiltering||($scope.blankStatelead=!0),$scope.leads=resp.items,$scope.leadpagination.prev=$scope.currentPage>1?!0:!1,resp.nextPageToken){var nextPage=$scope.currentPage+1;$scope.pages[nextPage]=resp.nextPageToken,$scope.leadpagination.next=!0}else $scope.leadpagination.next=!1;$scope.isMoreItemLoading=!1,$scope.isFiltering=!1,$scope.inProcess(!1),$scope.apply(),$(\"#leadCardsContainer\").trigger(\"resize\"),setTimeout(function(){var myDiv=$(\".autoresizeName\");myDiv.length&&myDiv.css({height:\"initial\",maxHeight:\"33px\"})},100)}};console.log(params),gapi.client.request({root:ROOT,path:\"/crmengine/v1/leads/listv2\",method:\"POST\",body:params,callback:callback})},Lead.list=function($scope,params){var callback=function(resp){if(resp.code)401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply());else{if(resp.items?($scope.blankStatelead=!1,$scope.filterNoResult=!1):(console.log(\"resp.items\"),console.log(resp.items),$scope.isFiltering?($scope.filterNoResult=!0,$scope.blankStatelead=!1):($scope.blankStatelead=!0,$scope.filterNoResult=!1)),$scope.leads=resp.items,console.log(\"***************resp.items\"),console.log(resp.items),$scope.leadpagination.prev=$scope.currentPage>1?!0:!1,resp.nextPageToken){var nextPage=$scope.currentPage+1;$scope.pages[nextPage]=resp.nextPageToken,$scope.leadpagination.next=!0}else $scope.leadpagination.next=!1;$scope.isMoreItemLoading=!1,$scope.isFiltering=!1,$(\"#leadCardsContainer\").trigger(\"resize\"),$scope.inProcess(!1),$scope.apply()}};if(params.tags||params.owner||params.source||\"-updated_at\"!=params.order){var updateCache=callback;console.log(\"in normal callback\")}else{console.log(\"FROM THE CACHE FIRT\");var updateCache=function(resp){console.log(\"the resp object form source\"),console.log(resp),iogrow.ioStorageCache.renderIfUpdated(\"leads\",resp,callback)},resp=iogrow.ioStorageCache.read(\"leads\");callback(resp)}$scope.inProcess(!0),$scope.apply(),gapi.client.request({root:ROOT,path:\"/crmengine/v1/leads/listv2\",method:\"POST\",body:params,callback:updateCache})},Lead.listMore=function($scope,params){$scope.isMoreItemLoading=!0,$(window).trigger(\"resize\"),$scope.apply(),gapi.client.request({root:ROOT,path:\"/crmengine/v1/leads/listv2\",method:\"POST\",body:params,callback:function(resp){if(resp.code)401==resp.code&&($scope.refreshToken(),$scope.isMoreItemLoading=!1);else{if(angular.forEach(resp.items,function(item){$scope.leads.push(item)}),$scope.leadpagination.prev=$scope.currentPage>1?!0:!1,resp.nextPageToken){var nextPage=$scope.currentPage+1;$scope.pages[nextPage]=resp.nextPageToken,$scope.leadpagination.next=!0}else $scope.leadpagination.next=!1;$scope.isMoreItemLoading=!1,$scope.isFiltering=!1,$scope.apply(),$(\"#leadCardsContainer\").trigger(\"resize\"),setTimeout(function(){var myDiv=$(\".autoresizeName\");myDiv.length&&myDiv.css({height:\"initial\",maxHeight:\"33px\"})},100)}}}),$scope.apply()},Lead.filterByFirstAndLastName=function($scope,params,callback){$scope.inProcess(!0),$scope.apply(),gapi.client.request({root:ROOT,path:\"/crmengine/v1/leads/filter\",method:\"POST\",body:params,callback:function(resp){resp.code?($(\"#addLeadModal\").modal(\"hide\"),$(\"#errorModal\").modal(\"show\"),\"Invalid grant\"==resp.message&&$scope.refreshToken()):(console.log(resp),callback(resp.items)),$scope.inProcess(!1),$scope.apply()}})},Lead.mergeLead=function($scope,params){$scope.isLoading=!0,$scope.apply(),gapi.client.request({root:ROOT,path:\"/crmengine/v1/leads/merge\",method:\"POST\",body:params,callback:function(resp){$scope.isLoading=!1,$scope.apply(),resp.code||($scope.mergedLeads++,$scope.mergedLeads==$scope.similarLeads.length&&($(\"#sameLeadModal\").modal(\"hide\"),$(\"body\").removeClass(\"modal-open\"),$(\".modal-backdrop\").remove(),window.location.replace(\"/#/leads/show/\"+resp.id)))}})},Lead.create=function($scope,params,force){force?Lead.insert($scope,params):Lead.filterByFirstAndLastName($scope,params,function(similarLeads){similarLeads&&similarLeads.length?($scope.similarLeads=similarLeads,$(\"#sameLeadModal\").modal(\"show\"),$scope.apply()):Lead.insert($scope,params)})},Lead.insert=function($scope,params){mixpanel.init(\"793d188e5019dfa586692fc3b312e5d1\",{loaded:function(){incrementer(\"NUMBER_LEAD\")}}),trackMixpanelAction(\"LEAD_INSERT\"),$scope.inProcess(!0),$scope.apply(),gapi.client.request({root:ROOT,path:\"/crmengine/v1/leads/insertv2\",method:\"POST\",body:params,callback:function(resp){!resp.code&&resp.id?$scope.leadInserted(resp.id):resp.id?($(\"#addLeadModal\").modal(\"hide\"),$(\"body\").removeClass(\"modal-open\"),$(\".modal-backdrop\").remove(),$(\"#errorModal\").modal(\"show\"),\"Invalid grant\"==resp.message&&$scope.refreshToken()):(console.log(resp),$scope.orginalUser=resp)}}),$scope.inProcess(!1),$scope.apply()},Lead.convert=function($scope,params){trackMixpanelAction(\"LEAD_CONVERT\"),$scope.inProcess(!0),$scope.apply(),gapi.client.crmengine.leads.convertv2(params).execute(function(resp){resp.code?($(\"#addLeadModal\").modal(\"hide\"),$(\"#errorModal\").modal(\"show\"),\"Invalid grant\"==resp.message):($(\"#convertLeadModal\").modal(\"hide\"),console.log(\"here rasp id\"),console.log(resp),$scope.inProcess(!1),$scope.apply(),$scope.leadConverted(resp.id))})},Lead[\"import\"]=function($scope,params){trackMixpanelAction(\"LEAD_LIST_IMPORT\"),$scope.inProcess(!0),$scope.apply(),gapi.client.crmengine.leads[\"import\"](params).execute(function(resp){console.log(params),console.log(resp),resp.code?($(\"#errorModal\").modal(\"show\"),401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply())):($scope.isContentLoaded=!0,$scope.numberOfRecords=resp.number_of_records,$scope.mappingColumns=resp.items,$scope.job_id=resp.job_id,$scope.doTheMapping(resp),$scope.inProcess(!1),$scope.apply())})},Lead.importSecondStep=function($scope,params){$scope.inProcess(!0),$scope.apply(),gapi.client.crmengine.leads.import_from_csv_second_step(params).execute(function(resp){console.log(params),console.log(resp),resp.code?($(\"#errorModal\").modal(\"show\"),401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply())):(console.log(resp),$scope.showImportMessages(),$scope.inProcess(!1),$scope.apply())})},Lead[\"export\"]=function($scope,params){trackMixpanelAction(\"LEAD_LIST_EXPORT\"),$scope.isExporting=!0,gapi.client.crmengine.leads[\"export\"](params).execute(function(resp){resp.code||console.log(\"request ssent\")})},Lead.export_key=function($scope,params){$scope.isExporting=!0,gapi.client.crmengine.leads.export_keys(params).execute(function(resp){resp.code||console.log(\"request ssent\")})},Lead[\"delete\"]=function($scope,params){trackMixpanelAction(\"LEAD_DELETE\"),$scope.inProcess(!0),gapi.client.crmengine.leads[\"delete\"](params).execute(function(){$scope.leadDeleted(params.entityKey)}),$scope.inProcess(!1),$scope.apply()},Lead});var caseservices=angular.module(\"crmEngine.caseservices\",[]);accountservices.factory(\"Case\",function(){var Case=function(data){angular.extend(this,data)};return Case.get=function($scope,params){$scope.inProcess(!0),gapi.client.crmengine.cases.getv2(params).execute(function(resp){if(resp.code)401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply());else{$scope.casee=resp,console.log(resp),$scope.isContentLoaded=!0;var renderMap=!1;if(resp.infonodes&&resp.infonodes.items){for(var i=0;i<resp.infonodes.items.length;i++){\"addresses\"==resp.infonodes.items[i].kind&&(renderMap=!0),$scope.infonodes[resp.infonodes.items[i].kind]=resp.infonodes.items[i].items;for(var j=0;j<$scope.infonodes[resp.infonodes.items[i].kind].length;j++)for(var v=0;v<$scope.infonodes[resp.infonodes.items[i].kind][j].fields.length;v++)$scope.infonodes[resp.infonodes.items[i].kind][j][$scope.infonodes[resp.infonodes.items[i].kind][j].fields[v].field]=$scope.infonodes[resp.infonodes.items[i].kind][j].fields[v].value,$scope.infonodes[resp.infonodes.items[i].kind][j].entityKey=$scope.infonodes[resp.infonodes.items[i].kind][j].entityKey}renderMap&&$scope.renderMaps()}if($scope.getCustomFields(\"cases\"),resp.topics)if(params.topics.pageToken?angular.forEach(resp.topics.items,function(item){$scope.topics.push(item)}):$scope.topics=resp.topics.items,$scope.topicpagination.prev=$scope.topicCurrentPage>1?!0:!1,resp.topics.nextPageToken){var nextPage=$scope.topicCurrentPage+1;$scope.topicpages[nextPage]=resp.topics.nextPageToken,$scope.topicpagination.next=!0}else $scope.topicpagination.next=!1;if(resp.opportunities)if(resp.opportunities.items||($scope.blankStateopportunity=!0),$scope.opportunities=resp.opportunities.items,$scope.opppagination.prev=$scope.oppCurrentPage>1?!0:!1,resp.opportunities.nextPageToken){var nextPage=$scope.oppCurrentPage+1;$scope.opppages[nextPage]=resp.opportunities.nextPageToken,$scope.opppagination.next=!0}else $scope.opppagination.next=!1;if(resp.cases)if(resp.cases.items||($scope.blankStatecase=!0),$scope.cases=resp.cases.items,$scope.casepagination.prev=$scope.caseCurrentPage>1?!0:!1,resp.cases.nextPageToken){var nextPage=$scope.caseCurrentPage+1;$scope.casepages[nextPage]=resp.cases.nextPageToken,$scope.casepagination.next=!0}else $scope.casepagination.next=!1;if(resp.documents)if(resp.documents.items||($scope.blankStatdocuments=!0),params.documents.pageToken?angular.forEach(resp.documents.items,function(item){$scope.documents.push(item)}):$scope.documents=resp.documents.items,$scope.documentpagination.prev=$scope.documentCurrentPage>1?!0:!1,resp.documents.nextPageToken){var nextPage=$scope.documentCurrentPage+1;$scope.documentpages[nextPage]=resp.documents.nextPageToken,$scope.documentpagination.next=!0}else $scope.documentpagination.next=!1;$scope.tasks=resp.tasks?resp.tasks.items:[],$scope.events=resp.events?resp.events.items:[],document.title=\"Case: \"+$scope.casee.name,$scope.inProcess(!1),$scope.apply()}console.log(\"gapi get #end_execute\"),$scope.getColaborators()})},Case.search=function($scope,params){gapi.client.crmengine.cases.search(params).execute(function(resp){resp.items&&($scope.results=resp.items,$scope.apply())})},Case.list=function($scope,params){var callback=function(resp){if(resp.code)401==resp.code&&($scope.refreshToken(),$(window).trigger(\"resize\"),$scope.inProcess(!1),$scope.apply());else{if(resp.items?($scope.filterNoResult=!1,$scope.blankStatecase=!1):$scope.isFiltering?($scope.filterNoResult=!0,$scope.blankStatecase=!1):($scope.blankStatecase=!0,$scope.filterNoResult=!1),$scope.cases=resp.items,$scope.casepagination.prev=$scope.caseCurrentPage>1?!0:!1,resp.nextPageToken){var nextPage=$scope.caseCurrentPage+1;$scope.casepages[nextPage]=resp.nextPageToken,$scope.casepagination.next=!0}else $scope.casepagination.next=!1;$scope.inProcess(!1),$scope.apply()}};if(params.tags||params.owner||\"-updated_at\"!=params.order)var updateCache=callback;else{var updateCache=function(resp){iogrow.ioStorageCache.renderIfUpdated(\"cases\",resp,callback)},resp=iogrow.ioStorageCache.read(\"cases\");callback(resp)}$scope.inProcess(!0),$scope.apply(),gapi.client.crmengine.cases.listv2(params).execute(updateCache)},Case.listMore=function($scope,params){$scope.isMoreItemLoading=!0,$(window).trigger(\"resize\"),$scope.apply(),gapi.client.crmengine.cases.listv2(params).execute(function(resp){if(resp.code)401==resp.code&&($scope.refreshToken(),$scope.isMoreItemLoading=!1,$scope.apply(),$(window).trigger(\"resize\"));else{if(angular.forEach(resp.items,function(item){$scope.cases.push(item)}),$scope.casepagination.prev=$scope.caseCurrentPage>1?!0:!1,resp.nextPageToken){var nextPage=$scope.caseCurrentPage+1;$scope.casepages[nextPage]=resp.nextPageToken,$scope.casepagination.next=!0}else $scope.casepagination.next=!1;$scope.isMoreItemLoading=!1,$scope.apply()}}),$scope.isMoreItemLoading=!1},Case.insert=function($scope,casee){trackMixpanelAction(\"CASE_INSERT\"),$scope.inProcess(!0),gapi.client.crmengine.cases.insertv2(casee).execute(function(resp){resp.code?($(\"#addCaseModal\").modal(\"hide\"),$(\"#errorModal\").modal(\"show\"),401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply())):(void 0==$scope.cases&&($scope.cases=[],$scope.blankStatecase=!1),$scope.cases.push(resp),$scope.casee={},$scope.inProcess(!1),1!=$scope.relatedCase&&$scope.caseInserted&&$scope.caseInserted(resp),$scope.inProcess(!1),$scope.apply())})},Case.patch=function($scope,params){trackMixpanelAction(\"CASE_PATCH\"),$scope.inProcess(!0),$scope.apply(),gapi.client.crmengine.cases.patch(params).execute(function(resp){if(resp.code)401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply());else{for(var k in params)\"id\"!=k&&\"entityKey\"!=k&&($scope.casee[k]=resp[k]);$scope.inProcess(!1),$scope.apply()}$scope.getColaborators()})},Case[\"delete\"]=function($scope,id){trackMixpanelAction(\"CASE_DELETE\"),$scope.inProcess(!0),gapi.client.crmengine.cases[\"delete\"](id).execute(function(resp){$scope.relatedCase?$scope.caseDeleted(resp):window.location.replace(\"#/cases\"),$scope.inProcess(!1),$scope.apply()})},Case.update_status=function($scope,params){trackMixpanelAction(\"CASE_UPDATE_STATUS\"),$scope.inProcess(!0),gapi.client.crmengine.cases.update_status(params).execute(function(){}),$scope.inProcess(!1),$scope.apply()},Case[\"export\"]=function($scope,params){trackMixpanelAction(\"CASE_EXPORT\"),$scope.isExporting=!0,gapi.client.crmengine.cases[\"export\"](params).execute(function(resp){resp.code||console.log(\"request ssent\")})},Case.export_key=function($scope,params){$scope.isExporting=!0,gapi.client.crmengine.cases.export_keys(params).execute(function(resp){resp.code||console.log(\"request ssent\")})},Case});var discoverservices=angular.module(\"crmEngine.discoverservices\",[]);discoverservices.factory(\"Conf\",function($location){function getRootUrl(){var rootUrl=$location.protocol()+\"://\"+$location.host();return $location.port()&&(rootUrl+=\":\"+$location.port()),rootUrl}return{clientId:\"935370948155-a4ib9t8oijcekj8ck6dtdcidnfof4u8q.apps.googleusercontent.com\",apiBase:\"/api/\",rootUrl:getRootUrl(),scopes:\"https://www.googleapis.com/auth/plus.login https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/drive https://www.googleapis.com/auth/calendar\",requestvisibleactions:\"http://schemas.google.com/AddActivity http://schemas.google.com/ReviewActivity\",cookiepolicy:\"single_host_origin\",dicovers:\"/#/discovers/show/\",contacts:\"#/contacts/show/\",leads:\"/#/leads/show/\",opportunities:\"/#/opportunities/show/\",cases:\"/#/cases/show/\",shows:\"/#/shows/show/\"}}),discoverservices.factory(\"Discover\",function($http){var Discover=function(data){angular.extend(this,data)};return Discover.get_map=function($scope){var keywords=[];if(\"\"!=$scope.selected_tags)for(keyword in $scope.selected_tags)keywords.push($scope.selected_tags[keyword].name);var params={keywords:keywords,page:$scope.page,more:$scope.more,language:$scope.discovery_language};console.log(\"ddd\"+keywords),gapi.client.crmengine.twitter.get_map(params).execute(function(resp){resp.code?401==resp.code&&($scope.refreshToken(),$scope.isLoadingtweets=!1,$scope.apply()):(\"null\"==resp.results&&($scope.isLoadingtweets=!1,$scope.mapshow=null,$scope.apply()),$scope.map_results=JSON.parse(resp.results),$scope.initialize(),$scope.initialize(resp.items),$scope.isLoadingtweets=!1,$scope.apply()),console.log(\"gapi #end_execute\")})},Discover.delete_topic=function(topic){var val={value:topic};console.log(topic+\"toooo\"),gapi.client.crmengine.twitter.delete_topic(val).execute(function(resp){resp.code?401==resp.code&&($scope.refreshToken(),$scope.isLoadingtweets=!1,$scope.apply()):($scope.initialize(resp.items),$scope.isLoadingtweets=!1,$scope.apply()),console.log(\"gapi #end_execute\")})},Discover.get_tweets_details=function($scope){console.log(\"helo\"),console.log($scope.tweet_id);var idp={tweet_id:String($scope.tweet_id)};gapi.client.crmengine.twitter.get_tweets_details(idp).execute(function(resp){resp.code?401==resp.code&&($scope.refreshToken(),$scope.isLoadingtweets=!1,$scope.apply()):($scope.tweet_details=JSON.parse(resp.results)[0],console.log($scope.tweet_details),$scope.apply()),console.log(\"gapi #end_execute\")})},Discover.get_tweets_map=function($scope,location){$scope.isLoadingtweets=!0,$scope.apply();var keywords=[];if(\"\"!=$scope.selected_tags)for(keyword in $scope.selected_tags)keywords.push($scope.selected_tags[keyword].name);var params={keywords:keywords,page:$scope.page,more:$scope.more,language:location};gapi.client.crmengine.twitter.get_tweets_map(params).execute(function(resp){resp.code?401==resp.code&&($scope.refreshToken(),$scope.isLoadingtweets=!1,$scope.apply()):(console.log(\"serviceend:\"+$scope.tweetsshow),data=JSON.parse(resp.results),$scope.map_tweets=data,$scope.isLoadingtweets=!1,$scope.apply()),console.log(\"gapi #end_execute\")})},Discover.get_best_tweets=function($scope){console.log(\"iiii\"),$scope.isLoadingtweets=!0,$scope.apply();var keywords=[];if(\"\"!=$scope.selected_tags)for(keyword in $scope.selected_tags)keywords.push($scope.selected_tags[keyword].name);var params={value:keywords};gapi.client.crmengine.twitter.get_best_tweets(params).execute(function(resp){resp.code?(console.log(\"no response\"),401==resp.code&&($scope.refreshToken(),$scope.isLoadingtweets=!1,$scope.apply())):(console.log(resp.results.length),console.log(\"zzzz\"+resp.results+\"eiii\"),$scope.best_tweets=data,$scope.isLoadingtweets=!1,$scope.apply()),console.log(\"gapi #end_execute\")})},Discover.get_influencers_v2=function($scope){console.log(\"eeeee\"+JSON.stringify($scope.selected_tags)+\"dddd\"),$scope.noresults=!1,$scope.isLoadingtweets=!0,$scope.apply();var keywords=[];if(\"\"!=$scope.selected_tags)for(keyword in $scope.selected_tags)keywords.push($scope.selected_tags[keyword].name);var params={keywords:keywords,page:$scope.page,more:$scope.more,language:$scope.discovery_language};gapi.client.crmengine.twitter.get_influencers_v2(params).execute(function(resp){if(resp.code)401==resp.code&&($scope.refreshToken(),$scope.isLoadingtweets=!1,$scope.apply());else{\"null\"==resp.results&&($scope.isLoadingtweets=!1,$scope.apply());var list_influencers=[];data=JSON.parse(resp.results),list_influencers.push(data[0]);for(var i=0,length=data.length;length>i;i++){for(var insert=!0,j=0,lengthj=list_influencers.length;lengthj>j;j++){var first=list_influencers[j]._source.user.screen_name+\"\",second=data[i]._source.user.screen_name+\"\";first==second&&(insert=!1)}insert&&list_influencers.push(data[i])}1==list_influencers.length&&void 0==list_influencers[0]&&(list_influencers=[]),data=list_influencers,params.page>1?($scope.influencers_list=$scope.influencers_list.concat(data),\"undefined\"==typeof $scope.tags&&($scope.influencers_list=[])):($scope.influencers_list=data,null==$scope.influencers_list&&($scope.noresults=!0)),resp.more&&$scope.page++,$scope.more=!0,$scope.isLoadingtweets=!1,$scope.apply()}console.log(\"gapi #end_execute\")})},Discover.check=function(){var url=\"http://130.211.116.235:3000/twitter/crawlers/check?callback=JSON_CALLBACK\";$http.jsonp(url).success(function(data){console.log(data.found+\"check\")})},Discover.get_tweetsV2=function($scope,tags){if($scope.isLoadingtweets=!0,$scope.apply(),void 0!=tags)var params={limit:20,keywords:tags,page:$scope.page,language:$scope.discovery_language};else var params={limit:20,page:$scope.page,language:$scope.discovery_language};gapi.client.crmengine.discover.get_tweets(params).execute(function(resp){$scope.noresults=!1,resp.code?401==resp.code&&($scope.refreshToken(),$scope.isLoadingtweets=!1,$scope.apply()):(\"null\"==resp.results&&($scope.isLoadingtweets=!1),data=JSON.parse(resp.results),console.log(params.page+\"paramss\"),params.page>1?($scope.tweets=$scope.tweets.concat(data),\"undefined\"==typeof $scope.tags&&($scope.tweets=[])):($scope.tweets=data,console.log(\"twzss\"+$scope.tweets),console.log(\"endisco:\"+$scope.tweetsshow),\"\"==$scope.tweets&&($scope.noresults=!0)),resp.more&&$scope.page++,$scope.more=resp.more,$scope.isLoadingtweets=!1,$scope.apply()),console.log(\"gapi #end_execute\")})},Discover});var topicservices=angular.module(\"crmEngine.topicservices\",[]);topicservices.factory(\"Topic\",function(){var Topic=function(data){angular.extend(this,data)};return Topic.getUrl=function(type,id){var base_url=void 0;switch(type){case\"Note\":base_url=\"/#/notes/show/\";break;case\"Task\":base_url=\"/#/tasks/show/\";break;case\"Event\":base_url=\"/#/events/show/\"}return base_url+id},Topic.list=function($scope,params){$scope.isLoading=!0,gapi.client.crmengine.topics.list(params).execute(function(resp){if(resp.code)401==resp.code&&($scope.refreshToken(),$scope.isLoading=!1,$scope.$apply());else{if($scope.topics=resp.items,$scope.topicCurrentPage>1?(console.log(\"Should show PREV\"),$scope.topicpagination.prev=!0):$scope.topicpagination.prev=!1,resp.nextPageToken){var nextPage=$scope.topicCurrentPage+1;$scope.topicpages[nextPage]=resp.nextPageToken,$scope.topicpagination.next=!0}else $scope.topicpagination.next=!1;$scope.isLoading=!1,$scope.$apply(),$scope.hilightTopic()}})},Topic.get=function($scope,id){gapi.client.crmengine.topics.get(id).execute(function(resp){resp.code?401==resp.code&&($scope.refreshToken(),$scope.isLoading=!1,$scope.$apply()):($scope.topic=resp,$scope.$apply()),console.log(\"gapi #end_execute\")})},Topic}),topicservices.factory(\"WhoHasAccess\",function($http){var WhoHasAccess=function(data){angular.extend(this,data)};return WhoHasAccess.prototype.get=function(){var who=this;return $http.get(\"/api/whohasaccess/object/\"+who.obj+\"/item/\"+who.itemid).then(function(response){var results={};return results.whohasaccess=response.data[0].results,results.is_public=response.data[0].is_public,results})},WhoHasAccess});var topicservices=angular.module(\"crmEngine.taskservices\",[]);topicservices.factory(\"Task\",function(){var Task=function(data){angular.extend(this,data)};return Task.get=function($scope,id){$scope.inProcess(!0),gapi.client.crmengine.tasks.get(id).execute(function(resp){if(resp.code)401==resp.code&&($scope.refreshToken(),$scope.isLoadingTask=!1,$scope.inProcess(!1),$scope.apply());else{if($scope.task=resp,console.log(resp),$scope.task.about){var url=Task.getUrl($scope.task.about.kind,$scope.task.about.id);$scope.uri=url}$scope.isContentLoaded=!0,$scope.ListComments(),$scope.listContributors(),document.title=\"Task: \"+$scope.task.title,$scope.inProcess(!1),$scope.apply()}})},Task.get_docs=function($scope,params){$scope.inProcess(!0),gapi.client.crmengine.tasks.get_docs(params).execute(function(resp){resp.code?($scope.inProcess(!1),$scope.apply()):($scope.files=resp.items,$scope.inProcess(!1),$scope.apply())})},Task.patch=function($scope,params){trackMixpanelAction(\"TASK_PATCH\"),$scope.inProcess(!0),gapi.client.crmengine.tasks.patch(params).execute(function(resp){resp.code?($(\"#EditTaskModal\").modal(\"hide\"),$(\"#errorModal\").modal(\"show\"),\"Invalid grant\"==resp.message&&(console.log(\"Invalid grant\"),$scope.refreshToken(),$scope.listTags(),$scope.listTasks(),$scope.inProcess(!1),$scope.apply())):($scope.task=resp,$scope.listTags(),$scope.taskShow||$scope.listTasks(),$(\"#EditTaskModal\").modal(\"hide\"),$scope.inProcess(!1),$scope.apply())})},Task.list=function($scope,params){$scope.blankStateTask=!1,$scope.inProcess(!0);var callback=function(resp){if(resp.code)401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1),$scope.apply());else if(resp.items){if($scope.tasks=resp.items,$scope.taskpagination.prev=$scope.currentPage>1?!0:!1,resp.nextPageToken){var nextPage=$scope.currentPage+1;$scope.pages[nextPage]=resp.nextPageToken,$scope.taskpagination.next=!0}else $scope.taskpagination.next=!1;$scope.blankStateTask=!1,$scope.inProcess(!1),$scope.apply()}else $scope.isFiltering||($scope.blankStateTask=!0),$scope.tasks=resp.items,$scope.inProcess(!1),$scope.apply()};if(params.tags||params.owner||params.assignee||\"-updated_at\"!=params.order)var updateCache=callback;else{var updateCache=function(resp){iogrow.ioStorageCache.renderIfUpdated(\"tasks\",resp,callback)},resp=iogrow.ioStorageCache.read(\"tasks\");callback(resp)}gapi.client.crmengine.tasks.listv2(params).execute(updateCache)},Task.insert=function($scope,params){trackMixpanelAction(\"TASK_INSERT\"),$scope.inProcess(!0),gapi.client.crmengine.tasks.insertv2(params).execute(function(resp){resp.code?(console.log(resp.code),$scope.inProcess(!1),$scope.apply()):(void 0==$scope.tasks&&($scope.tasks=[]),$scope.tasks.push(resp),$scope.justaddedtask=resp,$scope.listTags(),22==$scope.selectedTab?$scope.urgentTasks():$scope.listTasks(),$scope.inProcess(!1),$scope.apply())})},Task.delete_assignee=function($scope,edgeKey){trackMixpanelAction(\"TASK_DELETE_ASSIGNEE\"),$scope.inProcess(!0);var params={entityKey:edgeKey};gapi.client.crmengine.edges[\"delete\"](params).execute(function(resp){resp.code||($scope.assignee_deleted(),$scope.inProcess(!1),$scope.apply())})},Task.getUrl=function(type,id){var base_url=void 0;switch(type){case\"Account\":base_url=\"/#/accounts/show/\";break;case\"Contact\":base_url=\"/#/contacts/show/\";break;case\"Lead\":base_url=\"/#/leads/show/\";break;case\"Opportunity\":base_url=\"/#/opportunities/show/\";break;case\"Case\":base_url=\"/#/cases/show/\";break;case\"Show\":base_url=\"/#/live/shows/show/\";break;case\"Feedback\":base_url=\"/#/live/feedbacks/feedback/\"}return base_url+id},Task[\"delete\"]=function($scope,params){trackMixpanelAction(\"TASK_DELETE\"),$scope.inProcess(!0),gapi.client.crmengine.tasks[\"delete\"](params).execute(function(){$scope.showPage?window.location.replace(\"#/tasks\"):($scope.listTasks(),$scope.inProcess(!1),$scope.apply())})},Task.listMore=function($scope,params){$scope.inProcess(!0),gapi.client.crmengine.tasks.listv2(params).execute(function(resp){if(resp.code)401==resp.code&&($scope.refreshToken(),$scope.inProcess(!0),$scope.apply());else{if(angular.forEach(resp.items,function(item){$scope.tasks.push(item)}),$scope.taskpagination.prev=$scope.currentPage>1?!0:!1,resp.nextPageToken){var nextPage=$scope.currentPage+1;$scope.pages[nextPage]=resp.nextPageToken,$scope.taskpagination.next=!0}else $scope.taskpagination.next=!1;$scope.inProcess(!0),$scope.apply()}console.log(\"gapi #end_execute\")})},Task.permission=function($scope,params){trackMixpanelAction(\"TASK_SHARE\"),$scope.inProcess(!0),gapi.client.crmengine.tasks.permission(params).execute(function(resp){resp.code||($scope.inProcess(!1),$scope.apply())})},Task[\"export\"]=function($scope,params){trackMixpanelAction(\"TASK_EXPORT\"),$scope.isExporting=!0,gapi.client.crmengine.tasks[\"export\"](params).execute(function(resp){resp.code||console.log(\"request ssent\")})},Task.export_key=function($scope,params){$scope.isExporting=!0,gapi.client.crmengine.tasks.export_keys(params).execute(function(resp){resp.code||console.log(\"request ssent\")})},Task}),topicservices.factory(\"Tag\",function(){var Tag=function(data){angular.extend(this,data)};return Tag.attach=function($scope,params,index,tab){$scope.inProcess(!0,\"tag attach\"),gapi.client.crmengine.tags.attach(params).execute(function(resp){resp.code?($scope.inProcess(!1,\"tag attach\"),$scope.apply()):($scope.tagattached(resp,index,tab,params.parent),$(window).trigger(\"resize\"),$scope.inProcess(!1,\"tag attach\"),$scope.apply())})},Tag.list=function($scope,params){$scope.inProcess(!0,\"tag list\"),gapi.client.request({root:ROOT,path:\"/crmengine/v1/tags/list\",method:\"POST\",body:params,callback:function(resp){resp.code?401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1,\"tag list\"),$scope.apply()):($scope.tags=resp.items,$scope.tagInfoData=resp.items,$scope.inProcess(!1,\"tag list\"),$scope.apply())}})},Tag.list_v2=function($scope,params){$scope.inProcess(!0),gapi.client.request({root:ROOT,path:\"/crmengine/v1/tags/list\",method:\"POST\",body:params,callback:function(resp){resp.code?401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1,\"tag list\"),$scope.apply()):($scope.tabtags=resp.items,$scope.tagInfoData=resp.items,$scope.inProcess(!1,\"tag list\"),$scope.apply())}})},Tag.insert=function($scope,params){$scope.inProcess(!0),gapi.client.request({root:ROOT,path:\"/crmengine/v1/tags/insert\",method:\"POST\",body:params,callback:function(resp){resp.code?($scope.inProcess(!1,\"tag list\"),$scope.apply()):($.inArray(params.about_kind,[\"topics\",\"Lead\",\"Account\",\"Contact\",\"Opportunity\",\"Case\",\"Task\"])>0&&(console.log(\"check kind\"),$scope.tagInserted(resp)),$scope.fromnewtab&&window.location.replace(\"#/discovers/\"),$scope.inProcess(!1,\"tag list\"),$scope.apply())}})},Tag.patch=function($scope,params){$scope.inProcess(!0),gapi.client.crmengine.tags.patch(params).execute(function(resp){resp.code?(console.log(resp.message),\"Invalid grant\"==resp.message&&($scope.refreshToken(),$scope.inProcess(!1,\"tag list\"),$scope.apply())):($scope.runTheProcess(),$scope.inProcess(!1,\"tag list\"),$scope.apply())})},Tag[\"delete\"]=function($scope,params){$scope.inProcess(!0),gapi.client.crmengine.tags[\"delete\"](params).execute(function(){$scope.tagDeleted(),$scope.inProcess(!1),$scope.apply()})},Tag}),topicservices.factory(\"Contributor\",function(){var Contributor=function(data){angular.extend(this,data)};return Contributor.list=function($scope,params){$scope.inProcess(!0),gapi.client.crmengine.contributors.list(params).execute(function(resp){resp.code?401==resp.code&&($scope.refreshToken(),$scope.inProcess(!1,\"tag list\"),$scope.apply()):(console.log($scope.currentPage),$scope.contributors=resp.items,$scope.inProcess(!1,\"tag list\"),$scope.apply())})},Contributor.insert=function($scope,params){$scope.inProcess(!0),gapi.client.crmengine.contributors.insert(params).execute(function(resp){\n\n3 matches across 3 files\n",
			"settings":
			{
				"buffer_size": 96942,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/services/infonodeservices.js",
			"settings":
			{
				"buffer_size": 7206,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/googleapiclient/channel.py",
			"settings":
			{
				"buffer_size": 9910,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/services/accountservices.js",
			"settings":
			{
				"buffer_size": 41030,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 354.0,
		"last_filter": "insta",
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"linter",
				"SublimeLinter: Next Error"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"list pa",
				"Package Control: List Packages"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"packa",
				"Package Control: Remove Package"
			],
			[
				"ints",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"sublimeL",
				"SublimeLint: Show All Errors"
			],
			[
				"packeges",
				"Package Control: List Packages"
			],
			[
				"ena",
				"Package Control: Enable Package"
			],
			[
				"tpack",
				"Package Control: Disable Package"
			],
			[
				"new d",
				"Tasks: New document"
			],
			[
				"task",
				"Tasks: New"
			],
			[
				"git pull",
				"Github: Pull Requests"
			],
			[
				"inst",
				"Package Control: Install Package"
			]
		],
		"width": 503.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/y_hamidia/Documents/Dev/iogrow",
		"/Users/y_hamidia/Documents/Dev/iogrow/googleapiclient"
	],
	"file_history":
	[
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/accounts/account_show.html",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/services/accountservices.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/controllers/opportunitycontroller.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/controllers/casecontrollers.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/controllers/taskcontrollers.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/services/taskservices.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/services/settingservices.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/services/contactservices.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/controllers/accountcontrollers.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/contacts/contact_new.html",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/controllers/contactcontroller.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/controllers/leadcontrollers.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/contacts/contact_show.html",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/services/leadservices.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/leads/lead_show.html",
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/opportunities/opportunity_show.html",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/services/opportunityservices.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/base.html",
		"/Users/y_hamidia/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/services/infonodeservices.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/controllers/admin/OpportunityEditController.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/directives/directives.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/activities/all_tasks.html",
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/opportunities/opportunity_new.html",
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/opportunities/opportunity_list.html",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/app.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/bootstrap3/css/test.css",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/controllers/documentcontrollers.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/build/js/sync_ctrls_sers_scripts.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/leads/lead_list.html",
		"/Users/y_hamidia/Documents/Dev/iogrow/iomessages.py",
		"/Users/y_hamidia/Documents/Dev/iogrow/iomodels/crmengine/documents.py",
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/leads/lead_new.html",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/services/caseservices.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/opportunit_new.html",
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/cases/case_show.html",
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/accounts/account_new.html",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/plugins/jquery-slimscroll/jquery.slimscroll.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/build/js/async_scripts_2.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/cases/case_list.html",
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/contacts/contact_list.html",
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/accounts/account_list.html",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/controllers/admin/LeadStatusEditController.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/build/js/first_sync_scripts.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/build/js/sync_scripts.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/node_modules/psi/node_modules/update-notifier/node_modules/configstore/node_modules/js-yaml/node_modules/argparse/lib/action_container.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/cases/case_new.html",
		"/Users/y_hamidia/Documents/Dev/iogrow/Package Control Messages",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/controllers/searchcontrollers.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/people.py",
		"/Users/y_hamidia/Documents/Dev/iogrow/ioendpoints.py",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/services/linkedinservices.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/node_modules/psi/node_modules/googleapis/node_modules/gapitoken/node_modules/request/node_modules/har-validator/node_modules/is-my-json-valid/test/json-schema-draft4/uniqueItems.json",
		"/Users/y_hamidia/Documents/.bash_profile",
		"/Users/y_hamidia/Library/Application Support/Sublime Text 3/Packages/User/JavaScript.sublime-build",
		"/Users/y_hamidia/.bash_profile",
		"/Users/y_hamidia/Documents/testtt.js",
		"/Users/y_hamidia/Library/Application Support/Sublime Text 3/Packages/Git/Git.sublime-settings",
		"/Users/y_hamidia/Library/Application Support/Sublime Text 3/Packages/User/Git.sublime-settings",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/bootstrap3/plugins/bootstrap-editable/inputs-ext/wysihtml5/wysihtml5.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/model.py",
		"/Users/y_hamidia/Documents/Dev/iogrow/untitled.css",
		"/Users/y_hamidia/Documents/Dev/iogrow/untitled.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/controllers/admin/RegionalEditController.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/build/css/admin.css",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/controllers/admin/CustomFieldsEditController.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/admin/custom_fields/custom_fields_edit.html",
		"/Users/y_hamidia/Documents/Dev/iogrow/handlers.py",
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/admin/users/user_list.html",
		"/Users/y_hamidia/Desktop/tabs-to-add.htlm",
		"/Users/y_hamidia/Documents/Dev/iogrow/untitled",
		"/Users/y_hamidia/Documents/Dev/iogrow/untitled.html",
		"/Users/y_hamidia/Documents/css_animations/touch",
		"/Users/y_hamidia/Documents/css_animations/day.html",
		"/Users/y_hamidia/Documents/test_animation/style.css",
		"/Users/y_hamidia/Documents/test_animation/index.html",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/controllers/settingscontrollers.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/admin/opportunity/opportunity_edit.html",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/services/mapservices.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/services/authservices.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/admin/company/company_edit.html",
		"/Users/y_hamidia/Documents/test2.js",
		"/Users/y_hamidia/Documents/node_test/public/public.html",
		"/Users/y_hamidia/Documents/node_test/express_server.js",
		"/Users/y_hamidia/Documents/node_test/public/hello.html",
		"/Users/y_hamidia/Documents/node_test/config.json",
		"/Users/y_hamidia/Documents/node_test/cus_server.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/build/js/async_scripts.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/admin/settings/settings.html",
		"/Users/y_hamidia/Desktop/test.html",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/vendor/bootstrap-gh-pages/ui-bootstrap-0.5.0.js",
		"/Users/y_hamidia/Documents/Dev/iogrow/templates/new_web_site/sign-in.html",
		"/Users/y_hamidia/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/services/edgeservices.js",
		"/Users/y_hamidia/Library/Application Support/Sublime Text 3/Packages/User/untitled",
		"/Users/y_hamidia/Library/Application Support/Sublime Text 3/Packages/User/Package Control.cache/console_log.sublime-snippe",
		"/Users/y_hamidia/Library/Application Support/Sublime Text 3/Packages/PlainTasks/messages/Tutorial.todo",
		"/Users/y_hamidia/Documents/Dev/iogrow/untitled.json"
	],
	"find":
	{
		"height": 73.0
	},
	"find_in_files":
	{
		"height": 194.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"$scope.share",
			");\n",
			"Lead",
			"$scope.share",
			"Invite collaborators:",
			"$scope.sharing_with",
			"extend",
			"body",
			"$scope.share",
			"filterSe",
			"padding-left: 0px;padding-right: 0px;",
			"filterSe",
			"filter",
			"filterSelected",
			"event.origin",
			"socialLinkOpener",
			"opener",
			"watc",
			"opener",
			"opner",
			"chrome",
			".test",
			"linkedinUrl",
			"linkedin",
			"opener",
			"'access'",
			"$scope.save",
			"cover/",
			"$scope.save =",
			"$scope.save",
			".save",
			"saveLInkedinData",
			"responseCustomFields",
			"$scope.existsInfonode",
			"$scope.addPhone",
			"$scope.addEmail",
			"$scope.addWeb",
			"$scope.addSoc",
			"$scope.addPhone",
			"$scope.addGeo",
			"$acope.addGeo",
			"addGeo",
			"existsInfonode",
			"$scope.addWebsite",
			"saveLinkedinData",
			"website",
			"$scope.addWebsite",
			"saveLinkedinData",
			"saveLInkedinData",
			"inList",
			"getLinkedinProfile",
			"addLinkedin",
			"addLinkedinP",
			" img-responsive img-thumbnail",
			"saveLinked",
			"linkedinDa",
			"saveLinkedinData",
			"news-blocks blank-card blank-card-yellow newsCard",
			"saveLinkedinData",
			".saveLinedinD",
			".save",
			"$scope.addGeo =",
			"$scope.addGeo",
			"addPhone",
			"opener",
			"linke",
			"deleteLead",
			"leadDeleted",
			"saveLInkedinData",
			"$scope.pushElement",
			"$scope.save",
			"$scope.show",
			".save",
			"saveLinkedinData",
			"pushElement",
			"pushElem",
			"addGeo",
			"$scope.save",
			"save",
			"saveLInkedinData",
			"$scope.save",
			".save",
			"$scope.addGeo",
			"addGeo",
			"existsInfonode",
			"$scope.exists",
			"addPhone",
			"forEach",
			"addWebsite",
			"$scope.addGeo =",
			"$scope.addGeo=",
			"addGeo",
			"profile_img_url",
			"phone.type",
			"addPhone",
			"event.origin",
			"addGeo",
			"addWebsite(website)",
			"inlinePatch",
			"inlinePa",
			"inline",
			"update",
			"updateLead",
			"update",
			"getLinkedinProfile",
			" $scope.getLinkedinProfile",
			" $scope.getLinkedinProfile ",
			"getLinkedinProfile",
			">>>",
			">>",
			"$scope.pushElement=",
			"pushElement",
			"saveLinkedinData",
			".save",
			"saveLinkedinData",
			"getLinkedinProfile",
			"getRelatedinProfile",
			"getLinkedinProfile",
			"inList",
			"getRelatedinProfile",
			"inList",
			"getlinkedinPro",
			"clearCon",
			"clearLea",
			"company",
			".company",
			".save",
			"saveLinkedin"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"</option>/n",
			"",
			"class=\"form-group\" style=\"margin-bottom:5px\"",
			"type=\"submit\" class=\"btn blue\" value=\"Add\" ng-disabled=\"!leads.customfield.name||!leads.customfield.field_type\"",
			"class=\"btn btn-default\" value=\"Clear\" type=\"button\"",
			"class=\"btn btn-default\" value=\"Cancel\" type=\"button\"",
			"{{ _(' Field preview') }}",
			"customfield.name",
			"customfield.field_type",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 9,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "taskcontrollers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 53095,
						"regions":
						{
						},
						"selection":
						[
							[
								33005,
								33009
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 30683.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "contactcontroller.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 200217,
						"regions":
						{
						},
						"selection":
						[
							[
								7493,
								7506
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 1.0,
						"translation.y": 4103.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 306,
						"regions":
						{
						},
						"selection":
						[
							[
								30,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"default_dir": "/Users/y_hamidia/Documents/Dev/iogrow",
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "leadcontrollers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 219885,
						"regions":
						{
						},
						"selection":
						[
							[
								10281,
								8433
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6510.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2208,
						"regions":
						{
						},
						"selection":
						[
							[
								1183,
								1183
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"default_dir": "/Users/y_hamidia/Documents/Dev/iogrow",
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 77.0,
						"translation.y": 637.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 5,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "",
							"default_dir": "/Users/y_hamidia/Documents/Dev/iogrow",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/leads/lead_new.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 69102,
						"regions":
						{
						},
						"selection":
						[
							[
								67536,
								69100
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 37439.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/app.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15677,
						"regions":
						{
						},
						"selection":
						[
							[
								15360,
								15360
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 11758.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/contacts/contact_new.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 72840,
						"regions":
						{
						},
						"selection":
						[
							[
								64993,
								64993
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 35955.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "accountcontrollers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 266901,
						"regions":
						{
						},
						"selection":
						[
							[
								61678,
								61684
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 1.0,
						"translation.y": 43929.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/services/leadservices.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 33599,
						"regions":
						{
						},
						"selection":
						[
							[
								12584,
								12610
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7331.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/directives/directives.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 33463,
						"regions":
						{
						},
						"selection":
						[
							[
								27427,
								27432
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 17664.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/accounts/account_show.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 383976,
						"regions":
						{
						},
						"selection":
						[
							[
								278081,
								278081
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 138323.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/accounts/account_new.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 97083,
						"regions":
						{
						},
						"selection":
						[
							[
								88790,
								88815
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 47435.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/leads/lead_show.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 298293,
						"regions":
						{
						},
						"selection":
						[
							[
								248952,
								248952
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 134051.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/contacts/contact_show.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 307155,
						"regions":
						{
						},
						"selection":
						[
							[
								217834,
								217834
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 110255.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/services/contactservices.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26320,
						"regions":
						{
						},
						"selection":
						[
							[
								9627,
								9645
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5959.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/static/build/js/sync_ctrls_sers_scripts.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1583946,
						"regions":
						{
						},
						"selection":
						[
							[
								1166264,
								1166264
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 898207.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 18,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 51638,
						"regions":
						{
						},
						"selection":
						[
							[
								51637,
								51637
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"default_dir": "/Users/y_hamidia/Documents/Dev/iogrow",
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 33422.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/base.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 37418,
						"regions":
						{
						},
						"selection":
						[
							[
								21307,
								21307
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 13022.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/model.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 75673,
						"regions":
						{
						},
						"selection":
						[
							[
								70505,
								69932
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 44921.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "searchcontrollers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24445,
						"regions":
						{
						},
						"selection":
						[
							[
								22492,
								22492
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 18268.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/static/app/views/accountlist.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8546,
						"regions":
						{
						},
						"selection":
						[
							[
								708,
								710
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 499.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/accounts/account_list.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 68669,
						"regions":
						{
						},
						"selection":
						[
							[
								65264,
								65285
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 37470.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/contacts/contact_list.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 72764,
						"regions":
						{
						},
						"selection":
						[
							[
								68566,
								68566
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 40050.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/leads/lead_list.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 64124,
						"regions":
						{
						},
						"selection":
						[
							[
								60836,
								60895
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 34423.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/opportunities/opportunity_show.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 181567,
						"regions":
						{
						},
						"selection":
						[
							[
								6671,
								6671
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3111.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/opportunities/opportunity_list.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 77724,
						"regions":
						{
						},
						"selection":
						[
							[
								73906,
								73906
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 42144.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/cases/case_list.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 61105,
						"regions":
						{
						},
						"selection":
						[
							[
								55890,
								55890
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 33472.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/templates/activities/all_tasks.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 106886,
						"regions":
						{
						},
						"selection":
						[
							[
								505,
								505
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "opportunitycontroller.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 151135,
						"regions":
						{
						},
						"selection":
						[
							[
								16109,
								16109
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 11739.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "casecontrollers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 87160,
						"regions":
						{
						},
						"selection":
						[
							[
								7039,
								7039
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4698.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 32,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 96942,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										288,
										308
									],
									[
										622,
										642
									],
									[
										7799,
										7819
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								311,
								311
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"default_dir": "/Users/y_hamidia/Documents/Dev/iogrow",
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/services/infonodeservices.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7206,
						"regions":
						{
						},
						"selection":
						[
							[
								1999,
								1999
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1087.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/googleapiclient/channel.py",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 9910,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "/Users/y_hamidia/Documents/Dev/iogrow/static/app/scripts/services/accountservices.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 41030,
						"regions":
						{
						},
						"selection":
						[
							[
								25924,
								25924
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 17523.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 35.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 58.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/JavaScript.sublime-build",
	"project": "new_iogrow.sublime-project",
	"replace":
	{
		"height": 120.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"accountcon",
				"static/app/scripts/controllers/accountcontrollers.js"
			],
			[
				"casec",
				"static/app/scripts/controllers/casecontrollers.js"
			],
			[
				"oppcon",
				"static/app/scripts/controllers/opportunitycontroller.js"
			],
			[
				"",
				"static/app/scripts/controllers/accountcontrollers.js"
			],
			[
				"contactc",
				"static/app/scripts/controllers/contactcontroller.js"
			],
			[
				"accountc",
				"static/app/scripts/controllers/accountcontrollers.js"
			],
			[
				"concont",
				"static/app/scripts/controllers/contactcontroller.js"
			],
			[
				"casecon",
				"static/app/scripts/controllers/casecontrollers.js"
			],
			[
				"oppocon",
				"static/app/scripts/controllers/opportunitycontroller.js"
			],
			[
				"contactcon",
				"static/app/scripts/controllers/contactcontroller.js"
			],
			[
				"leadc",
				"static/app/scripts/controllers/leadcontrollers.js"
			],
			[
				"contact",
				"templates/contacts/contact_list.html"
			],
			[
				"account",
				"templates/accounts/account_list.html"
			],
			[
				"case",
				"templates/cases/case_list.html"
			],
			[
				"oppo",
				"templates/opportunities/opportunity_list.html"
			],
			[
				"contactlis",
				"templates/contacts/contact_list.html"
			],
			[
				"leadlis",
				"templates/leads/lead_list.html"
			],
			[
				"leadcon",
				"static/app/scripts/controllers/leadcontrollers.js"
			],
			[
				"accountcont",
				"static/app/scripts/controllers/accountcontrollers.js"
			],
			[
				"base",
				"templates/base.html"
			],
			[
				"leadcont",
				"static/app/scripts/controllers/leadcontrollers.js"
			],
			[
				"all",
				"templates/activities/all_tasks.html"
			],
			[
				"caseli",
				"templates/cases/case_list.html"
			],
			[
				"contactli",
				"templates/contacts/contact_list.html"
			],
			[
				"accountlist",
				"static/app/views/accountlist.html"
			],
			[
				"search",
				"static/app/scripts/controllers/searchcontrollers.js"
			],
			[
				"model",
				"model.py"
			],
			[
				"accountne",
				"templates/accounts/account_new.html"
			],
			[
				"accountsho",
				"templates/accounts/account_show.html"
			],
			[
				"accountnew",
				"templates/accounts/account_new.html"
			],
			[
				"leadshow",
				"templates/leads/lead_show.html"
			],
			[
				"leadne",
				"templates/leads/lead_new.html"
			],
			[
				"lead",
				"templates/leads/lead_new.html"
			],
			[
				"leadnew",
				"templates/leads/lead_new.html"
			],
			[
				"direct",
				"static/app/scripts/directives/directives.js"
			],
			[
				"leadcontroll",
				"static/app/scripts/controllers/leadcontrollers.js"
			],
			[
				"app.js",
				"static/app/scripts/app.js"
			],
			[
				"accountcontr",
				"static/app/scripts/controllers/accountcontrollers.js"
			],
			[
				"conttactcon",
				"static/app/scripts/controllers/contactcontroller.js"
			],
			[
				"infonos",
				"static/app/scripts/services/infonodeservices.js"
			],
			[
				"oppocontr",
				"static/app/scripts/controllers/opportunitycontroller.js"
			],
			[
				"contactcont",
				"static/app/scripts/controllers/contactcontroller.js"
			],
			[
				"contactse",
				"static/app/scripts/services/contactservices.js"
			],
			[
				"contactcontro",
				"static/app/scripts/controllers/contactcontroller.js"
			],
			[
				"leadcontr",
				"static/app/scripts/controllers/leadcontrollers.js"
			],
			[
				"contactsh",
				"templates/contacts/contact_show.html"
			],
			[
				"leadsho",
				"templates/leads/lead_show.html"
			],
			[
				"contaccon",
				"static/app/scripts/controllers/contactcontroller.js"
			],
			[
				"accountse",
				"static/app/scripts/services/accountservices.js"
			],
			[
				"accouncon",
				"static/app/scripts/controllers/accountcontrollers.js"
			],
			[
				"accounts",
				"static/app/scripts/services/accountservices.js"
			],
			[
				"accountcontrol",
				"static/app/scripts/controllers/accountcontrollers.js"
			],
			[
				"controlle",
				"static/app/scripts/controllers/leadcontrollers.js"
			],
			[
				"leadser",
				"static/app/scripts/services/leadservices.js"
			],
			[
				"leadcontrol",
				"static/app/scripts/controllers/leadcontrollers.js"
			],
			[
				"contactcno",
				"static/app/scripts/controllers/contactcontroller.js"
			],
			[
				"accoun",
				"templates/accounts/account_new.html"
			],
			[
				"leadn",
				"templates/leads/lead_new.html"
			],
			[
				"contacts",
				"static/app/scripts/services/contactservices.js"
			],
			[
				"syncclt",
				"static/build/js/sync_ctrls_sers_scripts.js"
			],
			[
				"contactnew",
				"templates/contacts/contact_new.html"
			],
			[
				"oppcontr",
				"static/app/scripts/controllers/opportunitycontroller.js"
			],
			[
				"ccountser",
				"static/app/scripts/services/accountservices.js"
			],
			[
				"accouns",
				"templates/accounts/account_show.html"
			],
			[
				"task",
				"static/app/scripts/controllers/taskcontrollers.js"
			],
			[
				"setting",
				"static/app/scripts/services/settingservices.js"
			],
			[
				"info",
				"static/app/scripts/services/infonodeservices.js"
			],
			[
				"taskser",
				"static/app/scripts/services/taskservices.js"
			],
			[
				"accountser",
				"static/app/scripts/services/accountservices.js"
			],
			[
				"contcatcont",
				"static/app/scripts/controllers/contactcontroller.js"
			],
			[
				"contactne",
				"templates/contacts/contact_new.html"
			],
			[
				"tasksc",
				"static/app/scripts/controllers/taskcontrollers.js"
			],
			[
				"taskse",
				"static/app/scripts/services/taskservices.js"
			],
			[
				"taskc",
				"static/app/scripts/controllers/taskcontrollers.js"
			],
			[
				"oppose",
				"static/app/scripts/services/opportunityservices.js"
			],
			[
				"oppocont",
				"static/app/scripts/controllers/opportunitycontroller.js"
			],
			[
				"contactser",
				"static/app/scripts/services/contactservices.js"
			],
			[
				"leadse",
				"static/app/scripts/services/leadservices.js"
			],
			[
				"contactcontrol",
				"static/app/scripts/controllers/contactcontroller.js"
			],
			[
				"opocontrol",
				"static/app/scripts/controllers/opportunitycontroller.js"
			],
			[
				"con",
				"templates/contacts/contact_show.html"
			],
			[
				"contactshow",
				"templates/contacts/contact_show.html"
			],
			[
				"oppocontroll",
				"static/app/scripts/controllers/opportunitycontroller.js"
			],
			[
				"opportunitcon",
				"static/app/scripts/controllers/admin/OpportunityEditController.js"
			],
			[
				"leadcontro",
				"static/app/scripts/controllers/leadcontrollers.js"
			],
			[
				"accountshow",
				"templates/accounts/account_show.html"
			],
			[
				"sett",
				"static/app/scripts/services/settingservices.js"
			],
			[
				"opposer",
				"static/app/scripts/services/opportunityservices.js"
			],
			[
				"oppocontrol",
				"static/app/scripts/controllers/opportunitycontroller.js"
			],
			[
				"opportunticont",
				"static/app/scripts/controllers/admin/OpportunityEditController.js"
			],
			[
				"opporcontr",
				"static/app/scripts/controllers/admin/OpportunityEditController.js"
			],
			[
				"leadservice",
				"static/app/scripts/services/leadservices.js"
			],
			[
				"taskcon",
				"static/app/scripts/controllers/taskcontrollers.js"
			],
			[
				"base.ht",
				"templates/base.html"
			],
			[
				"doc",
				"iomodels/crmengine/documents.py"
			],
			[
				"docu",
				"iomodels/crmengine/documents.py"
			],
			[
				"iomess",
				"iomessages.py"
			],
			[
				"document",
				"iomodels/crmengine/documents.py"
			],
			[
				"leadco",
				"static/app/scripts/controllers/leadcontrollers.js"
			],
			[
				"lead_sho",
				"templates/leads/lead_show.html"
			],
			[
				"documen",
				"static/app/scripts/controllers/documentcontrollers.js"
			],
			[
				"test",
				"static/bootstrap3/css/test.css"
			],
			[
				"test.cs",
				"static/bootstrap3/css/test.css"
			],
			[
				"opposervice",
				"static/app/scripts/services/opportunityservices.js"
			],
			[
				"syncctrl",
				"static/build/js/sync_ctrls_sers_scripts.js"
			],
			[
				"oppse",
				"static/app/scripts/services/opportunityservices.js"
			],
			[
				"oppocotn",
				"static/app/scripts/controllers/admin/OpportunityEditController.js"
			],
			[
				"opopcont",
				"static/app/scripts/controllers/admin/OpportunityEditController.js"
			],
			[
				"opop",
				"templates/opportunities/opportunity_show.html"
			],
			[
				"app",
				"static/app/scripts/app.js"
			],
			[
				"ooppo",
				"templates/opportunities/opportunity_new.html"
			],
			[
				"synctrl",
				"static/build/js/sync_ctrls_sers_scripts.js"
			],
			[
				"opponew",
				"~/Documents/Dev/iogrow/templates/opportunit_new.html"
			],
			[
				"opportunity",
				"templates/opportunities/opportunity_new.html"
			],
			[
				"leacontr",
				"static/app/scripts/controllers/leadcontrollers.js"
			],
			[
				"test.css",
				"static/bootstrap3/css/test.css"
			],
			[
				"oppo/",
				"templates/opportunities/opportunity_show.html"
			],
			[
				"casese",
				"static/app/scripts/services/caseservices.js"
			],
			[
				"opportunitse",
				"static/app/scripts/services/opportunityservices.js"
			],
			[
				"opportunit",
				"static/app/scripts/controllers/opportunitycontroller.js"
			],
			[
				"directives",
				"static/app/scripts/directives/directives.js"
			],
			[
				"caseco",
				"static/app/scripts/controllers/casecontrollers.js"
			],
			[
				"casecontr",
				"static/app/scripts/controllers/casecontrollers.js"
			],
			[
				"tas",
				"static/app/scripts/controllers/taskcontrollers.js"
			],
			[
				"opppo",
				"templates/opportunities/opportunity_show.html"
			],
			[
				"syncctr",
				"static/build/js/sync_ctrls_sers_scripts.js"
			],
			[
				"caseerci",
				"static/app/scripts/services/caseservices.js"
			],
			[
				"leadsh",
				"templates/leads/lead_show.html"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 285.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
